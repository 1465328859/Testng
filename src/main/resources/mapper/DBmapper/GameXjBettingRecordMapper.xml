<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameXjBettingRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameXjBettingRecord">
    <id column="bet_id" jdbcType="VARCHAR" property="betId" />
    <result column="member_code" jdbcType="VARCHAR" property="memberCode" />
    <result column="currency_code" jdbcType="VARCHAR" property="currencyCode" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="settle_time" jdbcType="VARCHAR" property="settleTime" />
    <result column="wager_status" jdbcType="INTEGER" property="wagerStatus" />
    <result column="stake" jdbcType="DECIMAL" property="stake" />
    <result column="return_amount" jdbcType="DECIMAL" property="returnAmount" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="odds_type" jdbcType="INTEGER" property="oddsType" />
    <result column="odds" jdbcType="DECIMAL" property="odds" />
    <result column="bets" jdbcType="VARCHAR" property="bets" />
    <result column="prefix" jdbcType="VARCHAR" property="prefix" />
    <result column="bet_type" jdbcType="VARCHAR" property="betType" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bet_id, member_code, currency_code, ip_address, create_time, settle_time, wager_status, 
    stake, return_amount, channel, odds_type, odds, bets, prefix, bet_type, created_at, 
    updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameXjBettingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_xj_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_xj_betting_record
    where bet_id = #{betId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from game_xj_betting_record
    where bet_id = #{betId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameXjBettingRecordExample">
    delete from game_xj_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameXjBettingRecord">
    insert into game_xj_betting_record (bet_id, member_code, currency_code, 
      ip_address, create_time, settle_time, 
      wager_status, stake, return_amount, 
      channel, odds_type, odds, 
      bets, prefix, bet_type, 
      created_at, updated_at)
    values (#{betId,jdbcType=VARCHAR}, #{memberCode,jdbcType=VARCHAR}, #{currencyCode,jdbcType=VARCHAR}, 
      #{ipAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{settleTime,jdbcType=VARCHAR}, 
      #{wagerStatus,jdbcType=INTEGER}, #{stake,jdbcType=DECIMAL}, #{returnAmount,jdbcType=DECIMAL}, 
      #{channel,jdbcType=INTEGER}, #{oddsType,jdbcType=INTEGER}, #{odds,jdbcType=DECIMAL}, 
      #{bets,jdbcType=VARCHAR}, #{prefix,jdbcType=VARCHAR}, #{betType,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameXjBettingRecord">
    insert into game_xj_betting_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="betId != null">
        bet_id,
      </if>
      <if test="memberCode != null">
        member_code,
      </if>
      <if test="currencyCode != null">
        currency_code,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="settleTime != null">
        settle_time,
      </if>
      <if test="wagerStatus != null">
        wager_status,
      </if>
      <if test="stake != null">
        stake,
      </if>
      <if test="returnAmount != null">
        return_amount,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="oddsType != null">
        odds_type,
      </if>
      <if test="odds != null">
        odds,
      </if>
      <if test="bets != null">
        bets,
      </if>
      <if test="prefix != null">
        prefix,
      </if>
      <if test="betType != null">
        bet_type,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="betId != null">
        #{betId,jdbcType=VARCHAR},
      </if>
      <if test="memberCode != null">
        #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="currencyCode != null">
        #{currencyCode,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="settleTime != null">
        #{settleTime,jdbcType=VARCHAR},
      </if>
      <if test="wagerStatus != null">
        #{wagerStatus,jdbcType=INTEGER},
      </if>
      <if test="stake != null">
        #{stake,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null">
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="oddsType != null">
        #{oddsType,jdbcType=INTEGER},
      </if>
      <if test="odds != null">
        #{odds,jdbcType=DECIMAL},
      </if>
      <if test="bets != null">
        #{bets,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null">
        #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="betType != null">
        #{betType,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameXjBettingRecordExample" resultType="java.lang.Long">
    select count(*) from game_xj_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_xj_betting_record
    <set>
      <if test="record.betId != null">
        bet_id = #{record.betId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCode != null">
        member_code = #{record.memberCode,jdbcType=VARCHAR},
      </if>
      <if test="record.currencyCode != null">
        currency_code = #{record.currencyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ipAddress != null">
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.settleTime != null">
        settle_time = #{record.settleTime,jdbcType=VARCHAR},
      </if>
      <if test="record.wagerStatus != null">
        wager_status = #{record.wagerStatus,jdbcType=INTEGER},
      </if>
      <if test="record.stake != null">
        stake = #{record.stake,jdbcType=DECIMAL},
      </if>
      <if test="record.returnAmount != null">
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.oddsType != null">
        odds_type = #{record.oddsType,jdbcType=INTEGER},
      </if>
      <if test="record.odds != null">
        odds = #{record.odds,jdbcType=DECIMAL},
      </if>
      <if test="record.bets != null">
        bets = #{record.bets,jdbcType=VARCHAR},
      </if>
      <if test="record.prefix != null">
        prefix = #{record.prefix,jdbcType=VARCHAR},
      </if>
      <if test="record.betType != null">
        bet_type = #{record.betType,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_xj_betting_record
    set bet_id = #{record.betId,jdbcType=VARCHAR},
      member_code = #{record.memberCode,jdbcType=VARCHAR},
      currency_code = #{record.currencyCode,jdbcType=VARCHAR},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      settle_time = #{record.settleTime,jdbcType=VARCHAR},
      wager_status = #{record.wagerStatus,jdbcType=INTEGER},
      stake = #{record.stake,jdbcType=DECIMAL},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      channel = #{record.channel,jdbcType=INTEGER},
      odds_type = #{record.oddsType,jdbcType=INTEGER},
      odds = #{record.odds,jdbcType=DECIMAL},
      bets = #{record.bets,jdbcType=VARCHAR},
      prefix = #{record.prefix,jdbcType=VARCHAR},
      bet_type = #{record.betType,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameXjBettingRecord">
    update game_xj_betting_record
    <set>
      <if test="memberCode != null">
        member_code = #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="currencyCode != null">
        currency_code = #{currencyCode,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="settleTime != null">
        settle_time = #{settleTime,jdbcType=VARCHAR},
      </if>
      <if test="wagerStatus != null">
        wager_status = #{wagerStatus,jdbcType=INTEGER},
      </if>
      <if test="stake != null">
        stake = #{stake,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null">
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="oddsType != null">
        odds_type = #{oddsType,jdbcType=INTEGER},
      </if>
      <if test="odds != null">
        odds = #{odds,jdbcType=DECIMAL},
      </if>
      <if test="bets != null">
        bets = #{bets,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null">
        prefix = #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="betType != null">
        bet_type = #{betType,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bet_id = #{betId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameXjBettingRecord">
    update game_xj_betting_record
    set member_code = #{memberCode,jdbcType=VARCHAR},
      currency_code = #{currencyCode,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      settle_time = #{settleTime,jdbcType=VARCHAR},
      wager_status = #{wagerStatus,jdbcType=INTEGER},
      stake = #{stake,jdbcType=DECIMAL},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      channel = #{channel,jdbcType=INTEGER},
      odds_type = #{oddsType,jdbcType=INTEGER},
      odds = #{odds,jdbcType=DECIMAL},
      bets = #{bets,jdbcType=VARCHAR},
      prefix = #{prefix,jdbcType=VARCHAR},
      bet_type = #{betType,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where bet_id = #{betId,jdbcType=VARCHAR}
  </update>
</mapper>