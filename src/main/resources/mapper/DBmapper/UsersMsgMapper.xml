<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.UsersMsgMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.UsersMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="created_time" jdbcType="CHAR" property="createdTime" />
    <result column="readed" jdbcType="BIT" property="readed" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.UsersMsg">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, title, username, created_time, readed
  </sql>
  <sql id="Blob_Column_List">
    text
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.UsersMsg">
    insert into users_msg (id, user_id, title, 
      username, created_time, readed, 
      text)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{username,jdbcType=CHAR}, #{createdTime,jdbcType=CHAR}, #{readed,jdbcType=BIT}, 
      #{text,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.UsersMsg">
    insert into users_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="readed != null">
        readed,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=CHAR},
      </if>
      <if test="readed != null">
        #{readed,jdbcType=BIT},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.UsersMsg">
    update users_msg
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=CHAR},
      </if>
      <if test="readed != null">
        readed = #{readed,jdbcType=BIT},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.UsersMsg">
    update users_msg
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      username = #{username,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=CHAR},
      readed = #{readed,jdbcType=BIT},
      text = #{text,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.UsersMsg">
    update users_msg
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      username = #{username,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=CHAR},
      readed = #{readed,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>