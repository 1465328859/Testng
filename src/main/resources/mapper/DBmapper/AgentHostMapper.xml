<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.AgentHostMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.AgentHost">
    <id column="host_id" jdbcType="INTEGER" property="hostId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="offline_rebate" jdbcType="VARCHAR" property="offlineRebate" />
    <result column="proxy_domain" jdbcType="VARCHAR" property="proxyDomain" />
    <result column="game_switch" jdbcType="VARCHAR" property="gameSwitch" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    host_id, user_id, offline_rebate, proxy_domain, game_switch
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.AgentHostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_host
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_host
    where host_id = #{hostId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_host
    where host_id = #{hostId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.AgentHostExample">
    delete from agent_host
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.AgentHost">
    insert into agent_host (host_id, user_id, offline_rebate, 
      proxy_domain, game_switch)
    values (#{hostId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{offlineRebate,jdbcType=VARCHAR}, 
      #{proxyDomain,jdbcType=VARCHAR}, #{gameSwitch,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.AgentHost">
    insert into agent_host
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        host_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="offlineRebate != null">
        offline_rebate,
      </if>
      <if test="proxyDomain != null">
        proxy_domain,
      </if>
      <if test="gameSwitch != null">
        game_switch,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        #{hostId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="offlineRebate != null">
        #{offlineRebate,jdbcType=VARCHAR},
      </if>
      <if test="proxyDomain != null">
        #{proxyDomain,jdbcType=VARCHAR},
      </if>
      <if test="gameSwitch != null">
        #{gameSwitch,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.AgentHostExample" resultType="java.lang.Long">
    select count(*) from agent_host
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_host
    <set>
      <if test="record.hostId != null">
        host_id = #{record.hostId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.offlineRebate != null">
        offline_rebate = #{record.offlineRebate,jdbcType=VARCHAR},
      </if>
      <if test="record.proxyDomain != null">
        proxy_domain = #{record.proxyDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.gameSwitch != null">
        game_switch = #{record.gameSwitch,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_host
    set host_id = #{record.hostId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      offline_rebate = #{record.offlineRebate,jdbcType=VARCHAR},
      proxy_domain = #{record.proxyDomain,jdbcType=VARCHAR},
      game_switch = #{record.gameSwitch,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.AgentHost">
    update agent_host
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="offlineRebate != null">
        offline_rebate = #{offlineRebate,jdbcType=VARCHAR},
      </if>
      <if test="proxyDomain != null">
        proxy_domain = #{proxyDomain,jdbcType=VARCHAR},
      </if>
      <if test="gameSwitch != null">
        game_switch = #{gameSwitch,jdbcType=VARCHAR},
      </if>
    </set>
    where host_id = #{hostId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.AgentHost">
    update agent_host
    set user_id = #{userId,jdbcType=INTEGER},
      offline_rebate = #{offlineRebate,jdbcType=VARCHAR},
      proxy_domain = #{proxyDomain,jdbcType=VARCHAR},
      game_switch = #{gameSwitch,jdbcType=VARCHAR}
    where host_id = #{hostId,jdbcType=INTEGER}
  </update>
</mapper>