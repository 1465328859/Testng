<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.AgentHostMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.AgentHost">
    <id column="host_id" jdbcType="INTEGER" property="hostId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="offline_rebate" jdbcType="VARCHAR" property="offlineRebate" />
    <result column="proxy_domain" jdbcType="VARCHAR" property="proxyDomain" />
  </resultMap>
  <sql id="Base_Column_List">
    host_id, user_id, offline_rebate, proxy_domain
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_host
    where host_id = #{hostId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_host
    where host_id = #{hostId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.AgentHost">
    insert into agent_host (host_id, user_id, offline_rebate, 
      proxy_domain)
    values (#{hostId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{offlineRebate,jdbcType=VARCHAR}, 
      #{proxyDomain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.AgentHost">
    insert into agent_host
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        host_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="offlineRebate != null">
        offline_rebate,
      </if>
      <if test="proxyDomain != null">
        proxy_domain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hostId != null">
        #{hostId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="offlineRebate != null">
        #{offlineRebate,jdbcType=VARCHAR},
      </if>
      <if test="proxyDomain != null">
        #{proxyDomain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.AgentHost">
    update agent_host
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="offlineRebate != null">
        offline_rebate = #{offlineRebate,jdbcType=VARCHAR},
      </if>
      <if test="proxyDomain != null">
        proxy_domain = #{proxyDomain,jdbcType=VARCHAR},
      </if>
    </set>
    where host_id = #{hostId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.AgentHost">
    update agent_host
    set user_id = #{userId,jdbcType=INTEGER},
      offline_rebate = #{offlineRebate,jdbcType=VARCHAR},
      proxy_domain = #{proxyDomain,jdbcType=VARCHAR}
    where host_id = #{hostId,jdbcType=INTEGER}
  </update>
</mapper>