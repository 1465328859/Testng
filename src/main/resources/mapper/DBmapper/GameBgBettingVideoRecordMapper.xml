<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameBgBettingVideoRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameBgBettingVideoRecord">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="module_id" jdbcType="INTEGER" property="moduleId" />
    <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
    <result column="game_id" jdbcType="INTEGER" property="gameId" />
    <result column="game_name" jdbcType="VARCHAR" property="gameName" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="b_amount" jdbcType="DECIMAL" property="bAmount" />
    <result column="a_amount" jdbcType="DECIMAL" property="aAmount" />
    <result column="order_from" jdbcType="TINYINT" property="orderFrom" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="from_ip" jdbcType="VARCHAR" property="fromIp" />
    <result column="issue_id" jdbcType="VARCHAR" property="issueId" />
    <result column="play_id" jdbcType="VARCHAR" property="playId" />
    <result column="play_name" jdbcType="VARCHAR" property="playName" />
    <result column="play_name_en" jdbcType="VARCHAR" property="playNameEn" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="valid_bet" jdbcType="DECIMAL" property="validBet" />
    <result column="payment" jdbcType="DECIMAL" property="payment" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, sn, uid, login_id, module_id, module_name, game_id, game_name, order_status, 
    b_amount, a_amount, order_from, order_time, from_ip, issue_id, play_id, play_name, 
    play_name_en, last_update_time, valid_bet, payment, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_bg_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_bg_betting_video_record
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from game_bg_betting_video_record
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecordExample">
    delete from game_bg_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecord">
    insert into game_bg_betting_video_record (order_id, sn, uid, 
      login_id, module_id, module_name, 
      game_id, game_name, order_status, 
      b_amount, a_amount, order_from, 
      order_time, from_ip, issue_id, 
      play_id, play_name, play_name_en, 
      last_update_time, valid_bet, payment, 
      created_at, updated_at)
    values (#{orderId,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{loginId,jdbcType=VARCHAR}, #{moduleId,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR}, 
      #{gameId,jdbcType=INTEGER}, #{gameName,jdbcType=VARCHAR}, #{orderStatus,jdbcType=TINYINT}, 
      #{bAmount,jdbcType=DECIMAL}, #{aAmount,jdbcType=DECIMAL}, #{orderFrom,jdbcType=TINYINT}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{fromIp,jdbcType=VARCHAR}, #{issueId,jdbcType=VARCHAR}, 
      #{playId,jdbcType=VARCHAR}, #{playName,jdbcType=VARCHAR}, #{playNameEn,jdbcType=VARCHAR}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{validBet,jdbcType=DECIMAL}, #{payment,jdbcType=DECIMAL}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecord">
    insert into game_bg_betting_video_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="gameId != null">
        game_id,
      </if>
      <if test="gameName != null">
        game_name,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="bAmount != null">
        b_amount,
      </if>
      <if test="aAmount != null">
        a_amount,
      </if>
      <if test="orderFrom != null">
        order_from,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="fromIp != null">
        from_ip,
      </if>
      <if test="issueId != null">
        issue_id,
      </if>
      <if test="playId != null">
        play_id,
      </if>
      <if test="playName != null">
        play_name,
      </if>
      <if test="playNameEn != null">
        play_name_en,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="validBet != null">
        valid_bet,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="gameName != null">
        #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="bAmount != null">
        #{bAmount,jdbcType=DECIMAL},
      </if>
      <if test="aAmount != null">
        #{aAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderFrom != null">
        #{orderFrom,jdbcType=TINYINT},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromIp != null">
        #{fromIp,jdbcType=VARCHAR},
      </if>
      <if test="issueId != null">
        #{issueId,jdbcType=VARCHAR},
      </if>
      <if test="playId != null">
        #{playId,jdbcType=VARCHAR},
      </if>
      <if test="playName != null">
        #{playName,jdbcType=VARCHAR},
      </if>
      <if test="playNameEn != null">
        #{playNameEn,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validBet != null">
        #{validBet,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecordExample" resultType="java.lang.Long">
    select count(*) from game_bg_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_bg_betting_video_record
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleId != null">
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null">
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.gameId != null">
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.gameName != null">
        game_name = #{record.gameName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.bAmount != null">
        b_amount = #{record.bAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.aAmount != null">
        a_amount = #{record.aAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderFrom != null">
        order_from = #{record.orderFrom,jdbcType=TINYINT},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromIp != null">
        from_ip = #{record.fromIp,jdbcType=VARCHAR},
      </if>
      <if test="record.issueId != null">
        issue_id = #{record.issueId,jdbcType=VARCHAR},
      </if>
      <if test="record.playId != null">
        play_id = #{record.playId,jdbcType=VARCHAR},
      </if>
      <if test="record.playName != null">
        play_name = #{record.playName,jdbcType=VARCHAR},
      </if>
      <if test="record.playNameEn != null">
        play_name_en = #{record.playNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validBet != null">
        valid_bet = #{record.validBet,jdbcType=DECIMAL},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_bg_betting_video_record
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      sn = #{record.sn,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      module_id = #{record.moduleId,jdbcType=INTEGER},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      game_id = #{record.gameId,jdbcType=INTEGER},
      game_name = #{record.gameName,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      b_amount = #{record.bAmount,jdbcType=DECIMAL},
      a_amount = #{record.aAmount,jdbcType=DECIMAL},
      order_from = #{record.orderFrom,jdbcType=TINYINT},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      from_ip = #{record.fromIp,jdbcType=VARCHAR},
      issue_id = #{record.issueId,jdbcType=VARCHAR},
      play_id = #{record.playId,jdbcType=VARCHAR},
      play_name = #{record.playName,jdbcType=VARCHAR},
      play_name_en = #{record.playNameEn,jdbcType=VARCHAR},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      valid_bet = #{record.validBet,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=DECIMAL},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecord">
    update game_bg_betting_video_record
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null">
        game_id = #{gameId,jdbcType=INTEGER},
      </if>
      <if test="gameName != null">
        game_name = #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="bAmount != null">
        b_amount = #{bAmount,jdbcType=DECIMAL},
      </if>
      <if test="aAmount != null">
        a_amount = #{aAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderFrom != null">
        order_from = #{orderFrom,jdbcType=TINYINT},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromIp != null">
        from_ip = #{fromIp,jdbcType=VARCHAR},
      </if>
      <if test="issueId != null">
        issue_id = #{issueId,jdbcType=VARCHAR},
      </if>
      <if test="playId != null">
        play_id = #{playId,jdbcType=VARCHAR},
      </if>
      <if test="playName != null">
        play_name = #{playName,jdbcType=VARCHAR},
      </if>
      <if test="playNameEn != null">
        play_name_en = #{playNameEn,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validBet != null">
        valid_bet = #{validBet,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBgBettingVideoRecord">
    update game_bg_betting_video_record
    set sn = #{sn,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      login_id = #{loginId,jdbcType=VARCHAR},
      module_id = #{moduleId,jdbcType=INTEGER},
      module_name = #{moduleName,jdbcType=VARCHAR},
      game_id = #{gameId,jdbcType=INTEGER},
      game_name = #{gameName,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      b_amount = #{bAmount,jdbcType=DECIMAL},
      a_amount = #{aAmount,jdbcType=DECIMAL},
      order_from = #{orderFrom,jdbcType=TINYINT},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      from_ip = #{fromIp,jdbcType=VARCHAR},
      issue_id = #{issueId,jdbcType=VARCHAR},
      play_id = #{playId,jdbcType=VARCHAR},
      play_name = #{playName,jdbcType=VARCHAR},
      play_name_en = #{playNameEn,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      valid_bet = #{validBet,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=DECIMAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>