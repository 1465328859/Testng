<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.UsersMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.Users">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="pwd" jdbcType="CHAR" property="pwd" />
    <result column="safe_pwd" jdbcType="CHAR" property="safePwd" />
    <result column="salt" jdbcType="CHAR" property="salt" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="total_bet_money" jdbcType="DECIMAL" property="totalBetMoney" />
    <result column="total_deposit_money" jdbcType="DECIMAL" property="totalDepositMoney" />
    <result column="total_withdraw_money" jdbcType="DECIMAL" property="totalWithdrawMoney" />
    <result column="bet_money" jdbcType="DECIMAL" property="betMoney" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="top_id" jdbcType="INTEGER" property="topId" />
    <result column="grade" jdbcType="TINYINT" property="grade" />
    <result column="up_three_grade" jdbcType="VARCHAR" property="upThreeGrade" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="reg_from" jdbcType="TINYINT" property="regFrom" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="last_login" jdbcType="INTEGER" property="lastLogin" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="ctime" jdbcType="INTEGER" property="ctime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, pwd, safe_pwd, salt, balance, total_bet_money, total_deposit_money, 
    total_withdraw_money, bet_money, parent_id, top_id, grade, up_three_grade, status, 
    reg_from, reg_ip, last_login, last_ip, login_count, edit_time, ctime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.Users">
    insert into users (user_id, username, pwd, 
      safe_pwd, salt, balance, total_bet_money, 
      total_deposit_money, total_withdraw_money, 
      bet_money, parent_id, top_id, 
      grade, up_three_grade, status, 
      reg_from, reg_ip, last_login, 
      last_ip, login_count, edit_time, 
      ctime)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{pwd,jdbcType=CHAR}, 
      #{safePwd,jdbcType=CHAR}, #{salt,jdbcType=CHAR}, #{balance,jdbcType=DECIMAL}, #{totalBetMoney,jdbcType=DECIMAL}, 
      #{totalDepositMoney,jdbcType=DECIMAL}, #{totalWithdrawMoney,jdbcType=DECIMAL}, 
      #{betMoney,jdbcType=DECIMAL}, #{parentId,jdbcType=INTEGER}, #{topId,jdbcType=INTEGER}, 
      #{grade,jdbcType=TINYINT}, #{upThreeGrade,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{regFrom,jdbcType=TINYINT}, #{regIp,jdbcType=VARCHAR}, #{lastLogin,jdbcType=INTEGER}, 
      #{lastIp,jdbcType=VARCHAR}, #{loginCount,jdbcType=INTEGER}, #{editTime,jdbcType=TIMESTAMP}, 
      #{ctime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="safePwd != null">
        safe_pwd,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="totalBetMoney != null">
        total_bet_money,
      </if>
      <if test="totalDepositMoney != null">
        total_deposit_money,
      </if>
      <if test="totalWithdrawMoney != null">
        total_withdraw_money,
      </if>
      <if test="betMoney != null">
        bet_money,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="upThreeGrade != null">
        up_three_grade,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="regFrom != null">
        reg_from,
      </if>
      <if test="regIp != null">
        reg_ip,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=CHAR},
      </if>
      <if test="safePwd != null">
        #{safePwd,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=CHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="totalBetMoney != null">
        #{totalBetMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalDepositMoney != null">
        #{totalDepositMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalWithdrawMoney != null">
        #{totalWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="betMoney != null">
        #{betMoney,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="upThreeGrade != null">
        #{upThreeGrade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="regFrom != null">
        #{regFrom,jdbcType=TINYINT},
      </if>
      <if test="regIp != null">
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=INTEGER},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=CHAR},
      </if>
      <if test="safePwd != null">
        safe_pwd = #{safePwd,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="totalBetMoney != null">
        total_bet_money = #{totalBetMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalDepositMoney != null">
        total_deposit_money = #{totalDepositMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalWithdrawMoney != null">
        total_withdraw_money = #{totalWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="betMoney != null">
        bet_money = #{betMoney,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="topId != null">
        top_id = #{topId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="upThreeGrade != null">
        up_three_grade = #{upThreeGrade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="regFrom != null">
        reg_from = #{regFrom,jdbcType=TINYINT},
      </if>
      <if test="regIp != null">
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=INTEGER},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=CHAR},
      safe_pwd = #{safePwd,jdbcType=CHAR},
      salt = #{salt,jdbcType=CHAR},
      balance = #{balance,jdbcType=DECIMAL},
      total_bet_money = #{totalBetMoney,jdbcType=DECIMAL},
      total_deposit_money = #{totalDepositMoney,jdbcType=DECIMAL},
      total_withdraw_money = #{totalWithdrawMoney,jdbcType=DECIMAL},
      bet_money = #{betMoney,jdbcType=DECIMAL},
      parent_id = #{parentId,jdbcType=INTEGER},
      top_id = #{topId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=TINYINT},
      up_three_grade = #{upThreeGrade,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      reg_from = #{regFrom,jdbcType=TINYINT},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=INTEGER},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      ctime = #{ctime,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>