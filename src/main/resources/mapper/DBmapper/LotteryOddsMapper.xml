<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.LotteryOddsMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.LotteryOdds">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lottery_id" jdbcType="INTEGER" property="lotteryId" />
    <result column="odds_name" jdbcType="VARCHAR" property="oddsName" />
    <result column="odds_alias" jdbcType="VARCHAR" property="oddsAlias" />
    <result column="top_odds" jdbcType="DECIMAL" property="topOdds" />
    <result column="low_odds" jdbcType="DECIMAL" property="lowOdds" />
    <result column="spare" jdbcType="VARCHAR" property="spare" />
    <result column="is_origin" jdbcType="BIT" property="isOrigin" />
    <result column="way_class_id" jdbcType="INTEGER" property="wayClassId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, lottery_id, odds_name, odds_alias, top_odds, low_odds, spare, is_origin, way_class_id
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.LotteryOddsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lottery_odds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lottery_odds
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lottery_odds
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.LotteryOddsExample">
    delete from lottery_odds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.LotteryOdds">
    insert into lottery_odds (id, lottery_id, odds_name, 
      odds_alias, top_odds, low_odds, 
      spare, is_origin, way_class_id
      )
    values (#{id,jdbcType=INTEGER}, #{lotteryId,jdbcType=INTEGER}, #{oddsName,jdbcType=VARCHAR}, 
      #{oddsAlias,jdbcType=VARCHAR}, #{topOdds,jdbcType=DECIMAL}, #{lowOdds,jdbcType=DECIMAL}, 
      #{spare,jdbcType=VARCHAR}, #{isOrigin,jdbcType=BIT}, #{wayClassId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.LotteryOdds">
    insert into lottery_odds
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lotteryId != null">
        lottery_id,
      </if>
      <if test="oddsName != null">
        odds_name,
      </if>
      <if test="oddsAlias != null">
        odds_alias,
      </if>
      <if test="topOdds != null">
        top_odds,
      </if>
      <if test="lowOdds != null">
        low_odds,
      </if>
      <if test="spare != null">
        spare,
      </if>
      <if test="isOrigin != null">
        is_origin,
      </if>
      <if test="wayClassId != null">
        way_class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lotteryId != null">
        #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="oddsName != null">
        #{oddsName,jdbcType=VARCHAR},
      </if>
      <if test="oddsAlias != null">
        #{oddsAlias,jdbcType=VARCHAR},
      </if>
      <if test="topOdds != null">
        #{topOdds,jdbcType=DECIMAL},
      </if>
      <if test="lowOdds != null">
        #{lowOdds,jdbcType=DECIMAL},
      </if>
      <if test="spare != null">
        #{spare,jdbcType=VARCHAR},
      </if>
      <if test="isOrigin != null">
        #{isOrigin,jdbcType=BIT},
      </if>
      <if test="wayClassId != null">
        #{wayClassId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.LotteryOddsExample" resultType="java.lang.Long">
    select count(*) from lottery_odds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lottery_odds
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryId != null">
        lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      </if>
      <if test="record.oddsName != null">
        odds_name = #{record.oddsName,jdbcType=VARCHAR},
      </if>
      <if test="record.oddsAlias != null">
        odds_alias = #{record.oddsAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.topOdds != null">
        top_odds = #{record.topOdds,jdbcType=DECIMAL},
      </if>
      <if test="record.lowOdds != null">
        low_odds = #{record.lowOdds,jdbcType=DECIMAL},
      </if>
      <if test="record.spare != null">
        spare = #{record.spare,jdbcType=VARCHAR},
      </if>
      <if test="record.isOrigin != null">
        is_origin = #{record.isOrigin,jdbcType=BIT},
      </if>
      <if test="record.wayClassId != null">
        way_class_id = #{record.wayClassId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lottery_odds
    set id = #{record.id,jdbcType=INTEGER},
      lottery_id = #{record.lotteryId,jdbcType=INTEGER},
      odds_name = #{record.oddsName,jdbcType=VARCHAR},
      odds_alias = #{record.oddsAlias,jdbcType=VARCHAR},
      top_odds = #{record.topOdds,jdbcType=DECIMAL},
      low_odds = #{record.lowOdds,jdbcType=DECIMAL},
      spare = #{record.spare,jdbcType=VARCHAR},
      is_origin = #{record.isOrigin,jdbcType=BIT},
      way_class_id = #{record.wayClassId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.LotteryOdds">
    update lottery_odds
    <set>
      <if test="lotteryId != null">
        lottery_id = #{lotteryId,jdbcType=INTEGER},
      </if>
      <if test="oddsName != null">
        odds_name = #{oddsName,jdbcType=VARCHAR},
      </if>
      <if test="oddsAlias != null">
        odds_alias = #{oddsAlias,jdbcType=VARCHAR},
      </if>
      <if test="topOdds != null">
        top_odds = #{topOdds,jdbcType=DECIMAL},
      </if>
      <if test="lowOdds != null">
        low_odds = #{lowOdds,jdbcType=DECIMAL},
      </if>
      <if test="spare != null">
        spare = #{spare,jdbcType=VARCHAR},
      </if>
      <if test="isOrigin != null">
        is_origin = #{isOrigin,jdbcType=BIT},
      </if>
      <if test="wayClassId != null">
        way_class_id = #{wayClassId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.LotteryOdds">
    update lottery_odds
    set lottery_id = #{lotteryId,jdbcType=INTEGER},
      odds_name = #{oddsName,jdbcType=VARCHAR},
      odds_alias = #{oddsAlias,jdbcType=VARCHAR},
      top_odds = #{topOdds,jdbcType=DECIMAL},
      low_odds = #{lowOdds,jdbcType=DECIMAL},
      spare = #{spare,jdbcType=VARCHAR},
      is_origin = #{isOrigin,jdbcType=BIT},
      way_class_id = #{wayClassId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>