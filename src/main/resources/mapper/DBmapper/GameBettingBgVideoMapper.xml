<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameBettingBgVideoMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameBettingBgVideo">
    <id column="platform" jdbcType="TINYINT" property="platform" />
    <id column="bet_order_no" jdbcType="VARCHAR" property="betOrderNo" />
    <result column="bet_time" jdbcType="TIMESTAMP" property="betTime" />
    <result column="settlement_time" jdbcType="TIMESTAMP" property="settlementTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="top_id" jdbcType="VARCHAR" property="topId" />
    <result column="is_switch" jdbcType="TINYINT" property="isSwitch" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="up_three_tree" jdbcType="VARCHAR" property="upThreeTree" />
    <result column="game_cn_name" jdbcType="VARCHAR" property="gameCnName" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="valid_bet_amount" jdbcType="DECIMAL" property="validBetAmount" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
    <result column="settlement_status" jdbcType="TINYINT" property="settlementStatus" />
    <result column="belong_date" jdbcType="DATE" property="belongDate" />
    <result column="rebate" jdbcType="DECIMAL" property="rebate" />
    <result column="rebate_amount" jdbcType="DECIMAL" property="rebateAmount" />
    <result column="top_rebate" jdbcType="DECIMAL" property="topRebate" />
    <result column="top_rebate_amount" jdbcType="DECIMAL" property="topRebateAmount" />
    <result column="primary_rebate" jdbcType="DECIMAL" property="primaryRebate" />
    <result column="primary_rebate_amount" jdbcType="DECIMAL" property="primaryRebateAmount" />
    <result column="secondary_rebate" jdbcType="DECIMAL" property="secondaryRebate" />
    <result column="secondary_rebate_amount" jdbcType="DECIMAL" property="secondaryRebateAmount" />
    <result column="tertiary_rebate" jdbcType="DECIMAL" property="tertiaryRebate" />
    <result column="tertiary_rebate_amount" jdbcType="DECIMAL" property="tertiaryRebateAmount" />
    <result column="from" jdbcType="TINYINT" property="from" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    platform, bet_order_no, bet_time, settlement_time, user_id, username, top_id, is_switch, 
    agent_name, up_three_tree, game_cn_name, bet_amount, valid_bet_amount, profit, settlement_status, 
    belong_date, rebate, rebate_amount, top_rebate, top_rebate_amount, primary_rebate, 
    primary_rebate_amount, secondary_rebate, secondary_rebate_amount, tertiary_rebate, 
    tertiary_rebate_amount, from
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameBettingBgVideoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_betting_bg_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBettingBgVideoKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_betting_bg_video
    where platform = #{platform,jdbcType=TINYINT}
      and bet_order_no = #{betOrderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBettingBgVideoKey">
    delete from game_betting_bg_video
    where platform = #{platform,jdbcType=TINYINT}
      and bet_order_no = #{betOrderNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameBettingBgVideoExample">
    delete from game_betting_bg_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameBettingBgVideo">
    insert into game_betting_bg_video (platform, bet_order_no, bet_time, 
      settlement_time, user_id, username, 
      top_id, is_switch, agent_name, 
      up_three_tree, game_cn_name, bet_amount, 
      valid_bet_amount, profit, settlement_status, 
      belong_date, rebate, rebate_amount, 
      top_rebate, top_rebate_amount, primary_rebate, 
      primary_rebate_amount, secondary_rebate, secondary_rebate_amount, 
      tertiary_rebate, tertiary_rebate_amount, from
      )
    values (#{platform,jdbcType=TINYINT}, #{betOrderNo,jdbcType=VARCHAR}, #{betTime,jdbcType=TIMESTAMP}, 
      #{settlementTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{topId,jdbcType=VARCHAR}, #{isSwitch,jdbcType=TINYINT}, #{agentName,jdbcType=VARCHAR}, 
      #{upThreeTree,jdbcType=VARCHAR}, #{gameCnName,jdbcType=VARCHAR}, #{betAmount,jdbcType=DECIMAL}, 
      #{validBetAmount,jdbcType=DECIMAL}, #{profit,jdbcType=DECIMAL}, #{settlementStatus,jdbcType=TINYINT}, 
      #{belongDate,jdbcType=DATE}, #{rebate,jdbcType=DECIMAL}, #{rebateAmount,jdbcType=DECIMAL}, 
      #{topRebate,jdbcType=DECIMAL}, #{topRebateAmount,jdbcType=DECIMAL}, #{primaryRebate,jdbcType=DECIMAL}, 
      #{primaryRebateAmount,jdbcType=DECIMAL}, #{secondaryRebate,jdbcType=DECIMAL}, #{secondaryRebateAmount,jdbcType=DECIMAL}, 
      #{tertiaryRebate,jdbcType=DECIMAL}, #{tertiaryRebateAmount,jdbcType=DECIMAL}, #{from,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameBettingBgVideo">
    insert into game_betting_bg_video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="platform != null">
        platform,
      </if>
      <if test="betOrderNo != null">
        bet_order_no,
      </if>
      <if test="betTime != null">
        bet_time,
      </if>
      <if test="settlementTime != null">
        settlement_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="isSwitch != null">
        is_switch,
      </if>
      <if test="agentName != null">
        agent_name,
      </if>
      <if test="upThreeTree != null">
        up_three_tree,
      </if>
      <if test="gameCnName != null">
        game_cn_name,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="validBetAmount != null">
        valid_bet_amount,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="settlementStatus != null">
        settlement_status,
      </if>
      <if test="belongDate != null">
        belong_date,
      </if>
      <if test="rebate != null">
        rebate,
      </if>
      <if test="rebateAmount != null">
        rebate_amount,
      </if>
      <if test="topRebate != null">
        top_rebate,
      </if>
      <if test="topRebateAmount != null">
        top_rebate_amount,
      </if>
      <if test="primaryRebate != null">
        primary_rebate,
      </if>
      <if test="primaryRebateAmount != null">
        primary_rebate_amount,
      </if>
      <if test="secondaryRebate != null">
        secondary_rebate,
      </if>
      <if test="secondaryRebateAmount != null">
        secondary_rebate_amount,
      </if>
      <if test="tertiaryRebate != null">
        tertiary_rebate,
      </if>
      <if test="tertiaryRebateAmount != null">
        tertiary_rebate_amount,
      </if>
      <if test="from != null">
        from,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="platform != null">
        #{platform,jdbcType=TINYINT},
      </if>
      <if test="betOrderNo != null">
        #{betOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="betTime != null">
        #{betTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settlementTime != null">
        #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=VARCHAR},
      </if>
      <if test="isSwitch != null">
        #{isSwitch,jdbcType=TINYINT},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="upThreeTree != null">
        #{upThreeTree,jdbcType=VARCHAR},
      </if>
      <if test="gameCnName != null">
        #{gameCnName,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="validBetAmount != null">
        #{validBetAmount,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="settlementStatus != null">
        #{settlementStatus,jdbcType=TINYINT},
      </if>
      <if test="belongDate != null">
        #{belongDate,jdbcType=DATE},
      </if>
      <if test="rebate != null">
        #{rebate,jdbcType=DECIMAL},
      </if>
      <if test="rebateAmount != null">
        #{rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="topRebate != null">
        #{topRebate,jdbcType=DECIMAL},
      </if>
      <if test="topRebateAmount != null">
        #{topRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="primaryRebate != null">
        #{primaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="primaryRebateAmount != null">
        #{primaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="secondaryRebate != null">
        #{secondaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="secondaryRebateAmount != null">
        #{secondaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="tertiaryRebate != null">
        #{tertiaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="tertiaryRebateAmount != null">
        #{tertiaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="from != null">
        #{from,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameBettingBgVideoExample" resultType="java.lang.Long">
    select count(*) from game_betting_bg_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_betting_bg_video
    <set>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=TINYINT},
      </if>
      <if test="record.betOrderNo != null">
        bet_order_no = #{record.betOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.betTime != null">
        bet_time = #{record.betTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.settlementTime != null">
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.topId != null">
        top_id = #{record.topId,jdbcType=VARCHAR},
      </if>
      <if test="record.isSwitch != null">
        is_switch = #{record.isSwitch,jdbcType=TINYINT},
      </if>
      <if test="record.agentName != null">
        agent_name = #{record.agentName,jdbcType=VARCHAR},
      </if>
      <if test="record.upThreeTree != null">
        up_three_tree = #{record.upThreeTree,jdbcType=VARCHAR},
      </if>
      <if test="record.gameCnName != null">
        game_cn_name = #{record.gameCnName,jdbcType=VARCHAR},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.validBetAmount != null">
        valid_bet_amount = #{record.validBetAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementStatus != null">
        settlement_status = #{record.settlementStatus,jdbcType=TINYINT},
      </if>
      <if test="record.belongDate != null">
        belong_date = #{record.belongDate,jdbcType=DATE},
      </if>
      <if test="record.rebate != null">
        rebate = #{record.rebate,jdbcType=DECIMAL},
      </if>
      <if test="record.rebateAmount != null">
        rebate_amount = #{record.rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.topRebate != null">
        top_rebate = #{record.topRebate,jdbcType=DECIMAL},
      </if>
      <if test="record.topRebateAmount != null">
        top_rebate_amount = #{record.topRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.primaryRebate != null">
        primary_rebate = #{record.primaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="record.primaryRebateAmount != null">
        primary_rebate_amount = #{record.primaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.secondaryRebate != null">
        secondary_rebate = #{record.secondaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="record.secondaryRebateAmount != null">
        secondary_rebate_amount = #{record.secondaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.tertiaryRebate != null">
        tertiary_rebate = #{record.tertiaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="record.tertiaryRebateAmount != null">
        tertiary_rebate_amount = #{record.tertiaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.from != null">
        from = #{record.from,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_betting_bg_video
    set platform = #{record.platform,jdbcType=TINYINT},
      bet_order_no = #{record.betOrderNo,jdbcType=VARCHAR},
      bet_time = #{record.betTime,jdbcType=TIMESTAMP},
      settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      top_id = #{record.topId,jdbcType=VARCHAR},
      is_switch = #{record.isSwitch,jdbcType=TINYINT},
      agent_name = #{record.agentName,jdbcType=VARCHAR},
      up_three_tree = #{record.upThreeTree,jdbcType=VARCHAR},
      game_cn_name = #{record.gameCnName,jdbcType=VARCHAR},
      bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      valid_bet_amount = #{record.validBetAmount,jdbcType=DECIMAL},
      profit = #{record.profit,jdbcType=DECIMAL},
      settlement_status = #{record.settlementStatus,jdbcType=TINYINT},
      belong_date = #{record.belongDate,jdbcType=DATE},
      rebate = #{record.rebate,jdbcType=DECIMAL},
      rebate_amount = #{record.rebateAmount,jdbcType=DECIMAL},
      top_rebate = #{record.topRebate,jdbcType=DECIMAL},
      top_rebate_amount = #{record.topRebateAmount,jdbcType=DECIMAL},
      primary_rebate = #{record.primaryRebate,jdbcType=DECIMAL},
      primary_rebate_amount = #{record.primaryRebateAmount,jdbcType=DECIMAL},
      secondary_rebate = #{record.secondaryRebate,jdbcType=DECIMAL},
      secondary_rebate_amount = #{record.secondaryRebateAmount,jdbcType=DECIMAL},
      tertiary_rebate = #{record.tertiaryRebate,jdbcType=DECIMAL},
      tertiary_rebate_amount = #{record.tertiaryRebateAmount,jdbcType=DECIMAL},
      from = #{record.from,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameBettingBgVideo">
    update game_betting_bg_video
    <set>
      <if test="betTime != null">
        bet_time = #{betTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settlementTime != null">
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        top_id = #{topId,jdbcType=VARCHAR},
      </if>
      <if test="isSwitch != null">
        is_switch = #{isSwitch,jdbcType=TINYINT},
      </if>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="upThreeTree != null">
        up_three_tree = #{upThreeTree,jdbcType=VARCHAR},
      </if>
      <if test="gameCnName != null">
        game_cn_name = #{gameCnName,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="validBetAmount != null">
        valid_bet_amount = #{validBetAmount,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="settlementStatus != null">
        settlement_status = #{settlementStatus,jdbcType=TINYINT},
      </if>
      <if test="belongDate != null">
        belong_date = #{belongDate,jdbcType=DATE},
      </if>
      <if test="rebate != null">
        rebate = #{rebate,jdbcType=DECIMAL},
      </if>
      <if test="rebateAmount != null">
        rebate_amount = #{rebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="topRebate != null">
        top_rebate = #{topRebate,jdbcType=DECIMAL},
      </if>
      <if test="topRebateAmount != null">
        top_rebate_amount = #{topRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="primaryRebate != null">
        primary_rebate = #{primaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="primaryRebateAmount != null">
        primary_rebate_amount = #{primaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="secondaryRebate != null">
        secondary_rebate = #{secondaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="secondaryRebateAmount != null">
        secondary_rebate_amount = #{secondaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="tertiaryRebate != null">
        tertiary_rebate = #{tertiaryRebate,jdbcType=DECIMAL},
      </if>
      <if test="tertiaryRebateAmount != null">
        tertiary_rebate_amount = #{tertiaryRebateAmount,jdbcType=DECIMAL},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=TINYINT},
      </if>
    </set>
    where platform = #{platform,jdbcType=TINYINT}
      and bet_order_no = #{betOrderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBettingBgVideo">
    update game_betting_bg_video
    set bet_time = #{betTime,jdbcType=TIMESTAMP},
      settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      top_id = #{topId,jdbcType=VARCHAR},
      is_switch = #{isSwitch,jdbcType=TINYINT},
      agent_name = #{agentName,jdbcType=VARCHAR},
      up_three_tree = #{upThreeTree,jdbcType=VARCHAR},
      game_cn_name = #{gameCnName,jdbcType=VARCHAR},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      valid_bet_amount = #{validBetAmount,jdbcType=DECIMAL},
      profit = #{profit,jdbcType=DECIMAL},
      settlement_status = #{settlementStatus,jdbcType=TINYINT},
      belong_date = #{belongDate,jdbcType=DATE},
      rebate = #{rebate,jdbcType=DECIMAL},
      rebate_amount = #{rebateAmount,jdbcType=DECIMAL},
      top_rebate = #{topRebate,jdbcType=DECIMAL},
      top_rebate_amount = #{topRebateAmount,jdbcType=DECIMAL},
      primary_rebate = #{primaryRebate,jdbcType=DECIMAL},
      primary_rebate_amount = #{primaryRebateAmount,jdbcType=DECIMAL},
      secondary_rebate = #{secondaryRebate,jdbcType=DECIMAL},
      secondary_rebate_amount = #{secondaryRebateAmount,jdbcType=DECIMAL},
      tertiary_rebate = #{tertiaryRebate,jdbcType=DECIMAL},
      tertiary_rebate_amount = #{tertiaryRebateAmount,jdbcType=DECIMAL},
      from = #{from,jdbcType=TINYINT}
    where platform = #{platform,jdbcType=TINYINT}
      and bet_order_no = #{betOrderNo,jdbcType=VARCHAR}
  </update>
</mapper>