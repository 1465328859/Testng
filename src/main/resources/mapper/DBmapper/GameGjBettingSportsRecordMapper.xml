<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameGjBettingSportsRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    <id column="game_sn" jdbcType="VARCHAR" property="gameSn" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
    <result column="platform_name" jdbcType="VARCHAR" property="platformName" />
    <result column="bet" jdbcType="DECIMAL" property="bet" />
    <result column="payout" jdbcType="DECIMAL" property="payout" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="bet_time" jdbcType="VARCHAR" property="betTime" />
    <result column="settle_time" jdbcType="VARCHAR" property="settleTime" />
    <result column="sync_time" jdbcType="VARCHAR" property="syncTime" />
    <result column="round_no" jdbcType="VARCHAR" property="roundNo" />
    <result column="game_name" jdbcType="VARCHAR" property="gameName" />
    <result column="played" jdbcType="VARCHAR" property="played" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    <result column="rule" jdbcType="LONGVARCHAR" property="rule" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    game_sn, user_id, platform, platform_name, bet, payout, result, bet_time, settle_time, 
    sync_time, round_no, game_name, played, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    rule
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from game_gj_betting_sports_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_gj_betting_sports_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from game_gj_betting_sports_record
    where game_sn = #{gameSn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from game_gj_betting_sports_record
    where game_sn = #{gameSn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecordExample">
    delete from game_gj_betting_sports_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    insert into game_gj_betting_sports_record (game_sn, user_id, platform, 
      platform_name, bet, payout, 
      result, bet_time, settle_time, 
      sync_time, round_no, game_name, 
      played, created_at, updated_at, 
      rule)
    values (#{gameSn,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, 
      #{platformName,jdbcType=VARCHAR}, #{bet,jdbcType=DECIMAL}, #{payout,jdbcType=DECIMAL}, 
      #{result,jdbcType=VARCHAR}, #{betTime,jdbcType=VARCHAR}, #{settleTime,jdbcType=VARCHAR}, 
      #{syncTime,jdbcType=VARCHAR}, #{roundNo,jdbcType=VARCHAR}, #{gameName,jdbcType=VARCHAR}, 
      #{played,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{rule,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    insert into game_gj_betting_sports_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gameSn != null">
        game_sn,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="platformName != null">
        platform_name,
      </if>
      <if test="bet != null">
        bet,
      </if>
      <if test="payout != null">
        payout,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="betTime != null">
        bet_time,
      </if>
      <if test="settleTime != null">
        settle_time,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="roundNo != null">
        round_no,
      </if>
      <if test="gameName != null">
        game_name,
      </if>
      <if test="played != null">
        played,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="rule != null">
        rule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gameSn != null">
        #{gameSn,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null">
        #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="bet != null">
        #{bet,jdbcType=DECIMAL},
      </if>
      <if test="payout != null">
        #{payout,jdbcType=DECIMAL},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="betTime != null">
        #{betTime,jdbcType=VARCHAR},
      </if>
      <if test="settleTime != null">
        #{settleTime,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=VARCHAR},
      </if>
      <if test="roundNo != null">
        #{roundNo,jdbcType=VARCHAR},
      </if>
      <if test="gameName != null">
        #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="played != null">
        #{played,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="rule != null">
        #{rule,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecordExample" resultType="java.lang.Long">
    select count(*) from game_gj_betting_sports_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_gj_betting_sports_record
    <set>
      <if test="record.gameSn != null">
        game_sn = #{record.gameSn,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.platformName != null">
        platform_name = #{record.platformName,jdbcType=VARCHAR},
      </if>
      <if test="record.bet != null">
        bet = #{record.bet,jdbcType=DECIMAL},
      </if>
      <if test="record.payout != null">
        payout = #{record.payout,jdbcType=DECIMAL},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.betTime != null">
        bet_time = #{record.betTime,jdbcType=VARCHAR},
      </if>
      <if test="record.settleTime != null">
        settle_time = #{record.settleTime,jdbcType=VARCHAR},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=VARCHAR},
      </if>
      <if test="record.roundNo != null">
        round_no = #{record.roundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.gameName != null">
        game_name = #{record.gameName,jdbcType=VARCHAR},
      </if>
      <if test="record.played != null">
        played = #{record.played,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rule != null">
        rule = #{record.rule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update game_gj_betting_sports_record
    set game_sn = #{record.gameSn,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      bet = #{record.bet,jdbcType=DECIMAL},
      payout = #{record.payout,jdbcType=DECIMAL},
      result = #{record.result,jdbcType=VARCHAR},
      bet_time = #{record.betTime,jdbcType=VARCHAR},
      settle_time = #{record.settleTime,jdbcType=VARCHAR},
      sync_time = #{record.syncTime,jdbcType=VARCHAR},
      round_no = #{record.roundNo,jdbcType=VARCHAR},
      game_name = #{record.gameName,jdbcType=VARCHAR},
      played = #{record.played,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      rule = #{record.rule,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_gj_betting_sports_record
    set game_sn = #{record.gameSn,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      bet = #{record.bet,jdbcType=DECIMAL},
      payout = #{record.payout,jdbcType=DECIMAL},
      result = #{record.result,jdbcType=VARCHAR},
      bet_time = #{record.betTime,jdbcType=VARCHAR},
      settle_time = #{record.settleTime,jdbcType=VARCHAR},
      sync_time = #{record.syncTime,jdbcType=VARCHAR},
      round_no = #{record.roundNo,jdbcType=VARCHAR},
      game_name = #{record.gameName,jdbcType=VARCHAR},
      played = #{record.played,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    update game_gj_betting_sports_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null">
        platform_name = #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="bet != null">
        bet = #{bet,jdbcType=DECIMAL},
      </if>
      <if test="payout != null">
        payout = #{payout,jdbcType=DECIMAL},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="betTime != null">
        bet_time = #{betTime,jdbcType=VARCHAR},
      </if>
      <if test="settleTime != null">
        settle_time = #{settleTime,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=VARCHAR},
      </if>
      <if test="roundNo != null">
        round_no = #{roundNo,jdbcType=VARCHAR},
      </if>
      <if test="gameName != null">
        game_name = #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="played != null">
        played = #{played,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="rule != null">
        rule = #{rule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where game_sn = #{gameSn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    update game_gj_betting_sports_record
    set user_id = #{userId,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      platform_name = #{platformName,jdbcType=VARCHAR},
      bet = #{bet,jdbcType=DECIMAL},
      payout = #{payout,jdbcType=DECIMAL},
      result = #{result,jdbcType=VARCHAR},
      bet_time = #{betTime,jdbcType=VARCHAR},
      settle_time = #{settleTime,jdbcType=VARCHAR},
      sync_time = #{syncTime,jdbcType=VARCHAR},
      round_no = #{roundNo,jdbcType=VARCHAR},
      game_name = #{gameName,jdbcType=VARCHAR},
      played = #{played,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      rule = #{rule,jdbcType=LONGVARCHAR}
    where game_sn = #{gameSn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameGjBettingSportsRecord">
    update game_gj_betting_sports_record
    set user_id = #{userId,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      platform_name = #{platformName,jdbcType=VARCHAR},
      bet = #{bet,jdbcType=DECIMAL},
      payout = #{payout,jdbcType=DECIMAL},
      result = #{result,jdbcType=VARCHAR},
      bet_time = #{betTime,jdbcType=VARCHAR},
      settle_time = #{settleTime,jdbcType=VARCHAR},
      sync_time = #{syncTime,jdbcType=VARCHAR},
      round_no = #{roundNo,jdbcType=VARCHAR},
      game_name = #{gameName,jdbcType=VARCHAR},
      played = #{played,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where game_sn = #{gameSn,jdbcType=VARCHAR}
  </update>
</mapper>