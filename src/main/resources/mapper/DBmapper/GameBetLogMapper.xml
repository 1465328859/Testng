<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameBetLogMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameBetLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform" jdbcType="TINYINT" property="platform" />
    <result column="bet_status" jdbcType="TINYINT" property="betStatus" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
    <result column="retry" jdbcType="TINYINT" property="retry" />
    <result column="start" jdbcType="VARCHAR" property="start" />
    <result column="end" jdbcType="VARCHAR" property="end" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform, bet_status, data_status, retry, start, end, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameBetLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_bet_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_bet_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from game_bet_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameBetLogExample">
    delete from game_bet_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameBetLog">
    insert into game_bet_log (id, platform, bet_status, 
      data_status, retry, start, 
      end, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{platform,jdbcType=TINYINT}, #{betStatus,jdbcType=TINYINT}, 
      #{dataStatus,jdbcType=TINYINT}, #{retry,jdbcType=TINYINT}, #{start,jdbcType=VARCHAR}, 
      #{end,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameBetLog">
    insert into game_bet_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="betStatus != null">
        bet_status,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
      <if test="retry != null">
        retry,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=TINYINT},
      </if>
      <if test="betStatus != null">
        #{betStatus,jdbcType=TINYINT},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=TINYINT},
      </if>
      <if test="start != null">
        #{start,jdbcType=VARCHAR},
      </if>
      <if test="end != null">
        #{end,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameBetLogExample" resultType="java.lang.Long">
    select count(*) from game_bet_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_bet_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=TINYINT},
      </if>
      <if test="record.betStatus != null">
        bet_status = #{record.betStatus,jdbcType=TINYINT},
      </if>
      <if test="record.dataStatus != null">
        data_status = #{record.dataStatus,jdbcType=TINYINT},
      </if>
      <if test="record.retry != null">
        retry = #{record.retry,jdbcType=TINYINT},
      </if>
      <if test="record.start != null">
        start = #{record.start,jdbcType=VARCHAR},
      </if>
      <if test="record.end != null">
        end = #{record.end,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_bet_log
    set id = #{record.id,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=TINYINT},
      bet_status = #{record.betStatus,jdbcType=TINYINT},
      data_status = #{record.dataStatus,jdbcType=TINYINT},
      retry = #{record.retry,jdbcType=TINYINT},
      start = #{record.start,jdbcType=VARCHAR},
      end = #{record.end,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameBetLog">
    update game_bet_log
    <set>
      <if test="platform != null">
        platform = #{platform,jdbcType=TINYINT},
      </if>
      <if test="betStatus != null">
        bet_status = #{betStatus,jdbcType=TINYINT},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="retry != null">
        retry = #{retry,jdbcType=TINYINT},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=VARCHAR},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBetLog">
    update game_bet_log
    set platform = #{platform,jdbcType=TINYINT},
      bet_status = #{betStatus,jdbcType=TINYINT},
      data_status = #{dataStatus,jdbcType=TINYINT},
      retry = #{retry,jdbcType=TINYINT},
      start = #{start,jdbcType=VARCHAR},
      end = #{end,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>