<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.LogAdminMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.LogAdmin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="types" jdbcType="TINYINT" property="types" />
    <result column="entry_time" jdbcType="CHAR" property="entryTime" />
    <result column="action_ip" jdbcType="VARCHAR" property="actionIp" />
    <result column="action_user" jdbcType="CHAR" property="actionUser" />
    <result column="client" jdbcType="TINYINT" property="client" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.LogAdmin">
    <result column="contents" jdbcType="LONGVARCHAR" property="contents" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, types, entry_time, action_ip, action_user, client
  </sql>
  <sql id="Blob_Column_List">
    contents
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.Test.model.DBmodel.LogAdminExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.LogAdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.LogAdminExample">
    delete from log_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.LogAdmin">
    insert into log_admin (id, types, entry_time, 
      action_ip, action_user, client, 
      contents)
    values (#{id,jdbcType=INTEGER}, #{types,jdbcType=TINYINT}, #{entryTime,jdbcType=CHAR}, 
      #{actionIp,jdbcType=VARCHAR}, #{actionUser,jdbcType=CHAR}, #{client,jdbcType=TINYINT}, 
      #{contents,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.LogAdmin">
    insert into log_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="actionIp != null">
        action_ip,
      </if>
      <if test="actionUser != null">
        action_user,
      </if>
      <if test="client != null">
        client,
      </if>
      <if test="contents != null">
        contents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="types != null">
        #{types,jdbcType=TINYINT},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=CHAR},
      </if>
      <if test="actionIp != null">
        #{actionIp,jdbcType=VARCHAR},
      </if>
      <if test="actionUser != null">
        #{actionUser,jdbcType=CHAR},
      </if>
      <if test="client != null">
        #{client,jdbcType=TINYINT},
      </if>
      <if test="contents != null">
        #{contents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.LogAdminExample" resultType="java.lang.Long">
    select count(*) from log_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.types != null">
        types = #{record.types,jdbcType=TINYINT},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=CHAR},
      </if>
      <if test="record.actionIp != null">
        action_ip = #{record.actionIp,jdbcType=VARCHAR},
      </if>
      <if test="record.actionUser != null">
        action_user = #{record.actionUser,jdbcType=CHAR},
      </if>
      <if test="record.client != null">
        client = #{record.client,jdbcType=TINYINT},
      </if>
      <if test="record.contents != null">
        contents = #{record.contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update log_admin
    set id = #{record.id,jdbcType=INTEGER},
      types = #{record.types,jdbcType=TINYINT},
      entry_time = #{record.entryTime,jdbcType=CHAR},
      action_ip = #{record.actionIp,jdbcType=VARCHAR},
      action_user = #{record.actionUser,jdbcType=CHAR},
      client = #{record.client,jdbcType=TINYINT},
      contents = #{record.contents,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log_admin
    set id = #{record.id,jdbcType=INTEGER},
      types = #{record.types,jdbcType=TINYINT},
      entry_time = #{record.entryTime,jdbcType=CHAR},
      action_ip = #{record.actionIp,jdbcType=VARCHAR},
      action_user = #{record.actionUser,jdbcType=CHAR},
      client = #{record.client,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.LogAdmin">
    update log_admin
    <set>
      <if test="types != null">
        types = #{types,jdbcType=TINYINT},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=CHAR},
      </if>
      <if test="actionIp != null">
        action_ip = #{actionIp,jdbcType=VARCHAR},
      </if>
      <if test="actionUser != null">
        action_user = #{actionUser,jdbcType=CHAR},
      </if>
      <if test="client != null">
        client = #{client,jdbcType=TINYINT},
      </if>
      <if test="contents != null">
        contents = #{contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.LogAdmin">
    update log_admin
    set types = #{types,jdbcType=TINYINT},
      entry_time = #{entryTime,jdbcType=CHAR},
      action_ip = #{actionIp,jdbcType=VARCHAR},
      action_user = #{actionUser,jdbcType=CHAR},
      client = #{client,jdbcType=TINYINT},
      contents = #{contents,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.LogAdmin">
    update log_admin
    set types = #{types,jdbcType=TINYINT},
      entry_time = #{entryTime,jdbcType=CHAR},
      action_ip = #{actionIp,jdbcType=VARCHAR},
      action_user = #{actionUser,jdbcType=CHAR},
      client = #{client,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>