<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.Activity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="cycle" jdbcType="INTEGER" property="cycle" />
    <result column="recharge_amount" jdbcType="VARCHAR" property="rechargeAmount" />
    <result column="bet_amount" jdbcType="VARCHAR" property="betAmount" />
    <result column="receive_count" jdbcType="INTEGER" property="receiveCount" />
    <result column="issue_count" jdbcType="INTEGER" property="issueCount" />
    <result column="release_time" jdbcType="CHAR" property="releaseTime" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="is_open" jdbcType="BIT" property="isOpen" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.Activity">
    <result column="indicate" jdbcType="LONGVARCHAR" property="indicate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, amount, cycle, recharge_amount, bet_amount, receive_count, issue_count, 
    release_time, publisher, is_open
  </sql>
  <sql id="Blob_Column_List">
    indicate
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.Test.model.DBmodel.ActivityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.ActivityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.ActivityExample">
    delete from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.Activity">
    insert into activity (id, name, amount, 
      cycle, recharge_amount, bet_amount, 
      receive_count, issue_count, release_time, 
      publisher, is_open, indicate
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{cycle,jdbcType=INTEGER}, #{rechargeAmount,jdbcType=VARCHAR}, #{betAmount,jdbcType=VARCHAR}, 
      #{receiveCount,jdbcType=INTEGER}, #{issueCount,jdbcType=INTEGER}, #{releaseTime,jdbcType=CHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{isOpen,jdbcType=BIT}, #{indicate,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.Activity">
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="rechargeAmount != null">
        recharge_amount,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="receiveCount != null">
        receive_count,
      </if>
      <if test="issueCount != null">
        issue_count,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="isOpen != null">
        is_open,
      </if>
      <if test="indicate != null">
        indicate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=INTEGER},
      </if>
      <if test="rechargeAmount != null">
        #{rechargeAmount,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=VARCHAR},
      </if>
      <if test="receiveCount != null">
        #{receiveCount,jdbcType=INTEGER},
      </if>
      <if test="issueCount != null">
        #{issueCount,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=CHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isOpen != null">
        #{isOpen,jdbcType=BIT},
      </if>
      <if test="indicate != null">
        #{indicate,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.ActivityExample" resultType="java.lang.Long">
    select count(*) from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.cycle != null">
        cycle = #{record.cycle,jdbcType=INTEGER},
      </if>
      <if test="record.rechargeAmount != null">
        recharge_amount = #{record.rechargeAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveCount != null">
        receive_count = #{record.receiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.issueCount != null">
        issue_count = #{record.issueCount,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=CHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.isOpen != null">
        is_open = #{record.isOpen,jdbcType=BIT},
      </if>
      <if test="record.indicate != null">
        indicate = #{record.indicate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update activity
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      cycle = #{record.cycle,jdbcType=INTEGER},
      recharge_amount = #{record.rechargeAmount,jdbcType=VARCHAR},
      bet_amount = #{record.betAmount,jdbcType=VARCHAR},
      receive_count = #{record.receiveCount,jdbcType=INTEGER},
      issue_count = #{record.issueCount,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=CHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      is_open = #{record.isOpen,jdbcType=BIT},
      indicate = #{record.indicate,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      cycle = #{record.cycle,jdbcType=INTEGER},
      recharge_amount = #{record.rechargeAmount,jdbcType=VARCHAR},
      bet_amount = #{record.betAmount,jdbcType=VARCHAR},
      receive_count = #{record.receiveCount,jdbcType=INTEGER},
      issue_count = #{record.issueCount,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=CHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      is_open = #{record.isOpen,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.Activity">
    update activity
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=INTEGER},
      </if>
      <if test="rechargeAmount != null">
        recharge_amount = #{rechargeAmount,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=VARCHAR},
      </if>
      <if test="receiveCount != null">
        receive_count = #{receiveCount,jdbcType=INTEGER},
      </if>
      <if test="issueCount != null">
        issue_count = #{issueCount,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=CHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isOpen != null">
        is_open = #{isOpen,jdbcType=BIT},
      </if>
      <if test="indicate != null">
        indicate = #{indicate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.Activity">
    update activity
    set name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      cycle = #{cycle,jdbcType=INTEGER},
      recharge_amount = #{rechargeAmount,jdbcType=VARCHAR},
      bet_amount = #{betAmount,jdbcType=VARCHAR},
      receive_count = #{receiveCount,jdbcType=INTEGER},
      issue_count = #{issueCount,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=CHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      is_open = #{isOpen,jdbcType=BIT},
      indicate = #{indicate,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.Activity">
    update activity
    set name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      cycle = #{cycle,jdbcType=INTEGER},
      recharge_amount = #{rechargeAmount,jdbcType=VARCHAR},
      bet_amount = #{betAmount,jdbcType=VARCHAR},
      receive_count = #{receiveCount,jdbcType=INTEGER},
      issue_count = #{issueCount,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=CHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      is_open = #{isOpen,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>