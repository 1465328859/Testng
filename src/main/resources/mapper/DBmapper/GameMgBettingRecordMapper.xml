<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameMgBettingRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameMgBettingRecord">
    <id column="t_id" jdbcType="BIGINT" property="tId" />
    <result column="external_ref" jdbcType="VARCHAR" property="externalRef" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="round_id" jdbcType="VARCHAR" property="roundId" />
    <result column="callet_code" jdbcType="VARCHAR" property="calletCode" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="sub_category" jdbcType="VARCHAR" property="subCategory" />
    <result column="balance_type" jdbcType="VARCHAR" property="balanceType" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="meta_data" jdbcType="VARCHAR" property="metaData" />
    <result column="parent_transaction_id" jdbcType="BIGINT" property="parentTransactionId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_ext_ref" jdbcType="VARCHAR" property="accountExtRef" />
    <result column="application_id" jdbcType="INTEGER" property="applicationId" />
    <result column="currency_unit" jdbcType="VARCHAR" property="currencyUnit" />
    <result column="transaction_time" jdbcType="TIMESTAMP" property="transactionTime" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="pool_amount" jdbcType="DECIMAL" property="poolAmount" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="session" jdbcType="VARCHAR" property="session" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t_id, external_ref, platform, item_id, round_id, callet_code, category, sub_category, 
    balance_type, type, amount, meta_data, parent_transaction_id, account_id, account_ext_ref, 
    application_id, currency_unit, transaction_time, balance, pool_amount, created_by, 
    created, session, ip, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameMgBettingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_mg_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_mg_betting_record
    where t_id = #{tId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from game_mg_betting_record
    where t_id = #{tId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameMgBettingRecordExample">
    delete from game_mg_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameMgBettingRecord">
    insert into game_mg_betting_record (t_id, external_ref, platform, 
      item_id, round_id, callet_code, 
      category, sub_category, balance_type, 
      type, amount, meta_data, 
      parent_transaction_id, account_id, account_ext_ref, 
      application_id, currency_unit, transaction_time, 
      balance, pool_amount, created_by, 
      created, session, ip, 
      created_at, updated_at)
    values (#{tId,jdbcType=BIGINT}, #{externalRef,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, 
      #{itemId,jdbcType=INTEGER}, #{roundId,jdbcType=VARCHAR}, #{calletCode,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{subCategory,jdbcType=VARCHAR}, #{balanceType,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{metaData,jdbcType=VARCHAR}, 
      #{parentTransactionId,jdbcType=BIGINT}, #{accountId,jdbcType=VARCHAR}, #{accountExtRef,jdbcType=VARCHAR}, 
      #{applicationId,jdbcType=INTEGER}, #{currencyUnit,jdbcType=VARCHAR}, #{transactionTime,jdbcType=TIMESTAMP}, 
      #{balance,jdbcType=DECIMAL}, #{poolAmount,jdbcType=DECIMAL}, #{createdBy,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{session,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameMgBettingRecord">
    insert into game_mg_betting_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        t_id,
      </if>
      <if test="externalRef != null">
        external_ref,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="roundId != null">
        round_id,
      </if>
      <if test="calletCode != null">
        callet_code,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="subCategory != null">
        sub_category,
      </if>
      <if test="balanceType != null">
        balance_type,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="metaData != null">
        meta_data,
      </if>
      <if test="parentTransactionId != null">
        parent_transaction_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountExtRef != null">
        account_ext_ref,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="currencyUnit != null">
        currency_unit,
      </if>
      <if test="transactionTime != null">
        transaction_time,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="poolAmount != null">
        pool_amount,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="session != null">
        session,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        #{tId,jdbcType=BIGINT},
      </if>
      <if test="externalRef != null">
        #{externalRef,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="roundId != null">
        #{roundId,jdbcType=VARCHAR},
      </if>
      <if test="calletCode != null">
        #{calletCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="subCategory != null">
        #{subCategory,jdbcType=VARCHAR},
      </if>
      <if test="balanceType != null">
        #{balanceType,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="metaData != null">
        #{metaData,jdbcType=VARCHAR},
      </if>
      <if test="parentTransactionId != null">
        #{parentTransactionId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountExtRef != null">
        #{accountExtRef,jdbcType=VARCHAR},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="currencyUnit != null">
        #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="transactionTime != null">
        #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="poolAmount != null">
        #{poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="session != null">
        #{session,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameMgBettingRecordExample" resultType="java.lang.Long">
    select count(*) from game_mg_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_mg_betting_record
    <set>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=BIGINT},
      </if>
      <if test="record.externalRef != null">
        external_ref = #{record.externalRef,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.roundId != null">
        round_id = #{record.roundId,jdbcType=VARCHAR},
      </if>
      <if test="record.calletCode != null">
        callet_code = #{record.calletCode,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.subCategory != null">
        sub_category = #{record.subCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceType != null">
        balance_type = #{record.balanceType,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.metaData != null">
        meta_data = #{record.metaData,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTransactionId != null">
        parent_transaction_id = #{record.parentTransactionId,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountExtRef != null">
        account_ext_ref = #{record.accountExtRef,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationId != null">
        application_id = #{record.applicationId,jdbcType=INTEGER},
      </if>
      <if test="record.currencyUnit != null">
        currency_unit = #{record.currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionTime != null">
        transaction_time = #{record.transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.poolAmount != null">
        pool_amount = #{record.poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.session != null">
        session = #{record.session,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_mg_betting_record
    set t_id = #{record.tId,jdbcType=BIGINT},
      external_ref = #{record.externalRef,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=INTEGER},
      round_id = #{record.roundId,jdbcType=VARCHAR},
      callet_code = #{record.calletCode,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      sub_category = #{record.subCategory,jdbcType=VARCHAR},
      balance_type = #{record.balanceType,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      meta_data = #{record.metaData,jdbcType=VARCHAR},
      parent_transaction_id = #{record.parentTransactionId,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_ext_ref = #{record.accountExtRef,jdbcType=VARCHAR},
      application_id = #{record.applicationId,jdbcType=INTEGER},
      currency_unit = #{record.currencyUnit,jdbcType=VARCHAR},
      transaction_time = #{record.transactionTime,jdbcType=TIMESTAMP},
      balance = #{record.balance,jdbcType=DECIMAL},
      pool_amount = #{record.poolAmount,jdbcType=DECIMAL},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      session = #{record.session,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameMgBettingRecord">
    update game_mg_betting_record
    <set>
      <if test="externalRef != null">
        external_ref = #{externalRef,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="roundId != null">
        round_id = #{roundId,jdbcType=VARCHAR},
      </if>
      <if test="calletCode != null">
        callet_code = #{calletCode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="subCategory != null">
        sub_category = #{subCategory,jdbcType=VARCHAR},
      </if>
      <if test="balanceType != null">
        balance_type = #{balanceType,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="metaData != null">
        meta_data = #{metaData,jdbcType=VARCHAR},
      </if>
      <if test="parentTransactionId != null">
        parent_transaction_id = #{parentTransactionId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountExtRef != null">
        account_ext_ref = #{accountExtRef,jdbcType=VARCHAR},
      </if>
      <if test="applicationId != null">
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="currencyUnit != null">
        currency_unit = #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="transactionTime != null">
        transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="poolAmount != null">
        pool_amount = #{poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="session != null">
        session = #{session,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where t_id = #{tId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameMgBettingRecord">
    update game_mg_betting_record
    set external_ref = #{externalRef,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      round_id = #{roundId,jdbcType=VARCHAR},
      callet_code = #{calletCode,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      sub_category = #{subCategory,jdbcType=VARCHAR},
      balance_type = #{balanceType,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      meta_data = #{metaData,jdbcType=VARCHAR},
      parent_transaction_id = #{parentTransactionId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=VARCHAR},
      account_ext_ref = #{accountExtRef,jdbcType=VARCHAR},
      application_id = #{applicationId,jdbcType=INTEGER},
      currency_unit = #{currencyUnit,jdbcType=VARCHAR},
      transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      balance = #{balance,jdbcType=DECIMAL},
      pool_amount = #{poolAmount,jdbcType=DECIMAL},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      session = #{session,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where t_id = #{tId,jdbcType=BIGINT}
  </update>
</mapper>