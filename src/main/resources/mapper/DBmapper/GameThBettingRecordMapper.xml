<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameThBettingRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameThBettingRecord">
    <id column="desk_uuid" jdbcType="VARCHAR" property="deskUuid" />
    <result column="game_type" jdbcType="SMALLINT" property="gameType" />
    <result column="room_type" jdbcType="TINYINT" property="roomType" />
    <result column="room_level" jdbcType="TINYINT" property="roomLevel" />
    <result column="win_money" jdbcType="DECIMAL" property="winMoney" />
    <result column="start_money" jdbcType="DECIMAL" property="startMoney" />
    <result column="end_money" jdbcType="DECIMAL" property="endMoney" />
    <result column="deal_money" jdbcType="DECIMAL" property="dealMoney" />
    <result column="bank_money" jdbcType="DECIMAL" property="bankMoney" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="effect_money" jdbcType="DECIMAL" property="effectMoney" />
    <result column="award_money" jdbcType="DECIMAL" property="awardMoney" />
    <result column="game_group" jdbcType="TINYINT" property="gameGroup" />
    <result column="tax_money" jdbcType="DECIMAL" property="taxMoney" />
    <result column="jack_pot" jdbcType="DECIMAL" property="jackPot" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    desk_uuid, game_type, room_type, room_level, win_money, start_money, end_money, deal_money, 
    bank_money, username, effect_money, award_money, game_group, tax_money, jack_pot, 
    end_time, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameThBettingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_th_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_th_betting_record
    where desk_uuid = #{deskUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from game_th_betting_record
    where desk_uuid = #{deskUuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameThBettingRecordExample">
    delete from game_th_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameThBettingRecord">
    insert into game_th_betting_record (desk_uuid, game_type, room_type, 
      room_level, win_money, start_money, 
      end_money, deal_money, bank_money, 
      username, effect_money, award_money, 
      game_group, tax_money, jack_pot, 
      end_time, created_at, updated_at
      )
    values (#{deskUuid,jdbcType=VARCHAR}, #{gameType,jdbcType=SMALLINT}, #{roomType,jdbcType=TINYINT}, 
      #{roomLevel,jdbcType=TINYINT}, #{winMoney,jdbcType=DECIMAL}, #{startMoney,jdbcType=DECIMAL}, 
      #{endMoney,jdbcType=DECIMAL}, #{dealMoney,jdbcType=DECIMAL}, #{bankMoney,jdbcType=DECIMAL}, 
      #{username,jdbcType=VARCHAR}, #{effectMoney,jdbcType=DECIMAL}, #{awardMoney,jdbcType=DECIMAL}, 
      #{gameGroup,jdbcType=TINYINT}, #{taxMoney,jdbcType=DECIMAL}, #{jackPot,jdbcType=DECIMAL}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameThBettingRecord">
    insert into game_th_betting_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deskUuid != null">
        desk_uuid,
      </if>
      <if test="gameType != null">
        game_type,
      </if>
      <if test="roomType != null">
        room_type,
      </if>
      <if test="roomLevel != null">
        room_level,
      </if>
      <if test="winMoney != null">
        win_money,
      </if>
      <if test="startMoney != null">
        start_money,
      </if>
      <if test="endMoney != null">
        end_money,
      </if>
      <if test="dealMoney != null">
        deal_money,
      </if>
      <if test="bankMoney != null">
        bank_money,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="effectMoney != null">
        effect_money,
      </if>
      <if test="awardMoney != null">
        award_money,
      </if>
      <if test="gameGroup != null">
        game_group,
      </if>
      <if test="taxMoney != null">
        tax_money,
      </if>
      <if test="jackPot != null">
        jack_pot,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deskUuid != null">
        #{deskUuid,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        #{gameType,jdbcType=SMALLINT},
      </if>
      <if test="roomType != null">
        #{roomType,jdbcType=TINYINT},
      </if>
      <if test="roomLevel != null">
        #{roomLevel,jdbcType=TINYINT},
      </if>
      <if test="winMoney != null">
        #{winMoney,jdbcType=DECIMAL},
      </if>
      <if test="startMoney != null">
        #{startMoney,jdbcType=DECIMAL},
      </if>
      <if test="endMoney != null">
        #{endMoney,jdbcType=DECIMAL},
      </if>
      <if test="dealMoney != null">
        #{dealMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankMoney != null">
        #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="effectMoney != null">
        #{effectMoney,jdbcType=DECIMAL},
      </if>
      <if test="awardMoney != null">
        #{awardMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameGroup != null">
        #{gameGroup,jdbcType=TINYINT},
      </if>
      <if test="taxMoney != null">
        #{taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="jackPot != null">
        #{jackPot,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameThBettingRecordExample" resultType="java.lang.Long">
    select count(*) from game_th_betting_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_th_betting_record
    <set>
      <if test="record.deskUuid != null">
        desk_uuid = #{record.deskUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.gameType != null">
        game_type = #{record.gameType,jdbcType=SMALLINT},
      </if>
      <if test="record.roomType != null">
        room_type = #{record.roomType,jdbcType=TINYINT},
      </if>
      <if test="record.roomLevel != null">
        room_level = #{record.roomLevel,jdbcType=TINYINT},
      </if>
      <if test="record.winMoney != null">
        win_money = #{record.winMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.startMoney != null">
        start_money = #{record.startMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.endMoney != null">
        end_money = #{record.endMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.dealMoney != null">
        deal_money = #{record.dealMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.bankMoney != null">
        bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.effectMoney != null">
        effect_money = #{record.effectMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.awardMoney != null">
        award_money = #{record.awardMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.gameGroup != null">
        game_group = #{record.gameGroup,jdbcType=TINYINT},
      </if>
      <if test="record.taxMoney != null">
        tax_money = #{record.taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.jackPot != null">
        jack_pot = #{record.jackPot,jdbcType=DECIMAL},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_th_betting_record
    set desk_uuid = #{record.deskUuid,jdbcType=VARCHAR},
      game_type = #{record.gameType,jdbcType=SMALLINT},
      room_type = #{record.roomType,jdbcType=TINYINT},
      room_level = #{record.roomLevel,jdbcType=TINYINT},
      win_money = #{record.winMoney,jdbcType=DECIMAL},
      start_money = #{record.startMoney,jdbcType=DECIMAL},
      end_money = #{record.endMoney,jdbcType=DECIMAL},
      deal_money = #{record.dealMoney,jdbcType=DECIMAL},
      bank_money = #{record.bankMoney,jdbcType=DECIMAL},
      username = #{record.username,jdbcType=VARCHAR},
      effect_money = #{record.effectMoney,jdbcType=DECIMAL},
      award_money = #{record.awardMoney,jdbcType=DECIMAL},
      game_group = #{record.gameGroup,jdbcType=TINYINT},
      tax_money = #{record.taxMoney,jdbcType=DECIMAL},
      jack_pot = #{record.jackPot,jdbcType=DECIMAL},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameThBettingRecord">
    update game_th_betting_record
    <set>
      <if test="gameType != null">
        game_type = #{gameType,jdbcType=SMALLINT},
      </if>
      <if test="roomType != null">
        room_type = #{roomType,jdbcType=TINYINT},
      </if>
      <if test="roomLevel != null">
        room_level = #{roomLevel,jdbcType=TINYINT},
      </if>
      <if test="winMoney != null">
        win_money = #{winMoney,jdbcType=DECIMAL},
      </if>
      <if test="startMoney != null">
        start_money = #{startMoney,jdbcType=DECIMAL},
      </if>
      <if test="endMoney != null">
        end_money = #{endMoney,jdbcType=DECIMAL},
      </if>
      <if test="dealMoney != null">
        deal_money = #{dealMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankMoney != null">
        bank_money = #{bankMoney,jdbcType=DECIMAL},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="effectMoney != null">
        effect_money = #{effectMoney,jdbcType=DECIMAL},
      </if>
      <if test="awardMoney != null">
        award_money = #{awardMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameGroup != null">
        game_group = #{gameGroup,jdbcType=TINYINT},
      </if>
      <if test="taxMoney != null">
        tax_money = #{taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="jackPot != null">
        jack_pot = #{jackPot,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where desk_uuid = #{deskUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameThBettingRecord">
    update game_th_betting_record
    set game_type = #{gameType,jdbcType=SMALLINT},
      room_type = #{roomType,jdbcType=TINYINT},
      room_level = #{roomLevel,jdbcType=TINYINT},
      win_money = #{winMoney,jdbcType=DECIMAL},
      start_money = #{startMoney,jdbcType=DECIMAL},
      end_money = #{endMoney,jdbcType=DECIMAL},
      deal_money = #{dealMoney,jdbcType=DECIMAL},
      bank_money = #{bankMoney,jdbcType=DECIMAL},
      username = #{username,jdbcType=VARCHAR},
      effect_money = #{effectMoney,jdbcType=DECIMAL},
      award_money = #{awardMoney,jdbcType=DECIMAL},
      game_group = #{gameGroup,jdbcType=TINYINT},
      tax_money = #{taxMoney,jdbcType=DECIMAL},
      jack_pot = #{jackPot,jdbcType=DECIMAL},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where desk_uuid = #{deskUuid,jdbcType=VARCHAR}
  </update>
</mapper>