<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.RptGradePresentMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.RptGradePresent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="grade" jdbcType="TINYINT" property="grade" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="add_time" jdbcType="INTEGER" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, grade, bet_amount, amount, add_time
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.RptGradePresentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rpt_grade_present
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rpt_grade_present
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rpt_grade_present
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.RptGradePresentExample">
    delete from rpt_grade_present
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.RptGradePresent">
    insert into rpt_grade_present (id, user_id, grade, 
      bet_amount, amount, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{grade,jdbcType=TINYINT}, 
      #{betAmount,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, #{addTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.RptGradePresent">
    insert into rpt_grade_present
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.RptGradePresentExample" resultType="java.lang.Long">
    select count(*) from rpt_grade_present
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rpt_grade_present
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=TINYINT},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rpt_grade_present
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=TINYINT},
      bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.RptGradePresent">
    update rpt_grade_present
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.RptGradePresent">
    update rpt_grade_present
    set user_id = #{userId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=TINYINT},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>