<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameReportAgentCommissionMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameReportAgentCommission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bet_order_no" jdbcType="VARCHAR" property="betOrderNo" />
    <result column="platform" jdbcType="TINYINT" property="platform" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="top_id" jdbcType="INTEGER" property="topId" />
    <result column="income_type" jdbcType="TINYINT" property="incomeType" />
    <result column="income_amount" jdbcType="DECIMAL" property="incomeAmount" />
    <result column="bet_user_id" jdbcType="INTEGER" property="betUserId" />
    <result column="bet_username" jdbcType="CHAR" property="betUsername" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="belong_date" jdbcType="DATE" property="belongDate" />
    <result column="rebate" jdbcType="DECIMAL" property="rebate" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bet_order_no, platform, type, user_id, username, top_id, income_type, income_amount, 
    bet_user_id, bet_username, bet_amount, belong_date, rebate, update_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameReportAgentCommissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_report_agent_commission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_report_agent_commission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from game_report_agent_commission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameReportAgentCommissionExample">
    delete from game_report_agent_commission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameReportAgentCommission">
    insert into game_report_agent_commission (id, bet_order_no, platform, 
      type, user_id, username, 
      top_id, income_type, income_amount, 
      bet_user_id, bet_username, bet_amount, 
      belong_date, rebate, update_at
      )
    values (#{id,jdbcType=INTEGER}, #{betOrderNo,jdbcType=VARCHAR}, #{platform,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{topId,jdbcType=INTEGER}, #{incomeType,jdbcType=TINYINT}, #{incomeAmount,jdbcType=DECIMAL}, 
      #{betUserId,jdbcType=INTEGER}, #{betUsername,jdbcType=CHAR}, #{betAmount,jdbcType=DECIMAL}, 
      #{belongDate,jdbcType=DATE}, #{rebate,jdbcType=DECIMAL}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameReportAgentCommission">
    insert into game_report_agent_commission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="betOrderNo != null">
        bet_order_no,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="incomeType != null">
        income_type,
      </if>
      <if test="incomeAmount != null">
        income_amount,
      </if>
      <if test="betUserId != null">
        bet_user_id,
      </if>
      <if test="betUsername != null">
        bet_username,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="belongDate != null">
        belong_date,
      </if>
      <if test="rebate != null">
        rebate,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="betOrderNo != null">
        #{betOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=INTEGER},
      </if>
      <if test="incomeType != null">
        #{incomeType,jdbcType=TINYINT},
      </if>
      <if test="incomeAmount != null">
        #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="betUserId != null">
        #{betUserId,jdbcType=INTEGER},
      </if>
      <if test="betUsername != null">
        #{betUsername,jdbcType=CHAR},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="belongDate != null">
        #{belongDate,jdbcType=DATE},
      </if>
      <if test="rebate != null">
        #{rebate,jdbcType=DECIMAL},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameReportAgentCommissionExample" resultType="java.lang.Long">
    select count(*) from game_report_agent_commission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_report_agent_commission
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.betOrderNo != null">
        bet_order_no = #{record.betOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.topId != null">
        top_id = #{record.topId,jdbcType=INTEGER},
      </if>
      <if test="record.incomeType != null">
        income_type = #{record.incomeType,jdbcType=TINYINT},
      </if>
      <if test="record.incomeAmount != null">
        income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.betUserId != null">
        bet_user_id = #{record.betUserId,jdbcType=INTEGER},
      </if>
      <if test="record.betUsername != null">
        bet_username = #{record.betUsername,jdbcType=CHAR},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.belongDate != null">
        belong_date = #{record.belongDate,jdbcType=DATE},
      </if>
      <if test="record.rebate != null">
        rebate = #{record.rebate,jdbcType=DECIMAL},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_report_agent_commission
    set id = #{record.id,jdbcType=INTEGER},
      bet_order_no = #{record.betOrderNo,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      top_id = #{record.topId,jdbcType=INTEGER},
      income_type = #{record.incomeType,jdbcType=TINYINT},
      income_amount = #{record.incomeAmount,jdbcType=DECIMAL},
      bet_user_id = #{record.betUserId,jdbcType=INTEGER},
      bet_username = #{record.betUsername,jdbcType=CHAR},
      bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      belong_date = #{record.belongDate,jdbcType=DATE},
      rebate = #{record.rebate,jdbcType=DECIMAL},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameReportAgentCommission">
    update game_report_agent_commission
    <set>
      <if test="betOrderNo != null">
        bet_order_no = #{betOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        top_id = #{topId,jdbcType=INTEGER},
      </if>
      <if test="incomeType != null">
        income_type = #{incomeType,jdbcType=TINYINT},
      </if>
      <if test="incomeAmount != null">
        income_amount = #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="betUserId != null">
        bet_user_id = #{betUserId,jdbcType=INTEGER},
      </if>
      <if test="betUsername != null">
        bet_username = #{betUsername,jdbcType=CHAR},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="belongDate != null">
        belong_date = #{belongDate,jdbcType=DATE},
      </if>
      <if test="rebate != null">
        rebate = #{rebate,jdbcType=DECIMAL},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameReportAgentCommission">
    update game_report_agent_commission
    set bet_order_no = #{betOrderNo,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      top_id = #{topId,jdbcType=INTEGER},
      income_type = #{incomeType,jdbcType=TINYINT},
      income_amount = #{incomeAmount,jdbcType=DECIMAL},
      bet_user_id = #{betUserId,jdbcType=INTEGER},
      bet_username = #{betUsername,jdbcType=CHAR},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      belong_date = #{belongDate,jdbcType=DATE},
      rebate = #{rebate,jdbcType=DECIMAL},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>