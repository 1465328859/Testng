<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.SysNoticeMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.SysNotice">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="created_at" jdbcType="CHAR" property="createdAt" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="show" jdbcType="BIT" property="show" />
    <result column="sort" jdbcType="TINYINT" property="sort" />
    <result column="suggest_web" jdbcType="BIT" property="suggestWeb" />
    <result column="suggest_mobile" jdbcType="BIT" property="suggestMobile" />
    <result column="is_roll" jdbcType="BIT" property="isRoll" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.SysNotice">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, created_at, creater, show, sort, suggest_web, suggest_mobile, is_roll
  </sql>
  <sql id="Blob_Column_List">
    text
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.Test.model.DBmodel.SysNoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.SysNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_notice
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from sys_notice
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.SysNoticeExample">
    delete from sys_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.SysNotice">
    insert into sys_notice (id, title, created_at, 
      creater, show, sort, suggest_web, 
      suggest_mobile, is_roll, text
      )
    values (#{id,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{createdAt,jdbcType=CHAR}, 
      #{creater,jdbcType=VARCHAR}, #{show,jdbcType=BIT}, #{sort,jdbcType=TINYINT}, #{suggestWeb,jdbcType=BIT}, 
      #{suggestMobile,jdbcType=BIT}, #{isRoll,jdbcType=BIT}, #{text,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.SysNotice">
    insert into sys_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="show != null">
        show,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="suggestWeb != null">
        suggest_web,
      </if>
      <if test="suggestMobile != null">
        suggest_mobile,
      </if>
      <if test="isRoll != null">
        is_roll,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=CHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="show != null">
        #{show,jdbcType=BIT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=TINYINT},
      </if>
      <if test="suggestWeb != null">
        #{suggestWeb,jdbcType=BIT},
      </if>
      <if test="suggestMobile != null">
        #{suggestMobile,jdbcType=BIT},
      </if>
      <if test="isRoll != null">
        #{isRoll,jdbcType=BIT},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.SysNoticeExample" resultType="java.lang.Long">
    select count(*) from sys_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=CHAR},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.show != null">
        show = #{record.show,jdbcType=BIT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=TINYINT},
      </if>
      <if test="record.suggestWeb != null">
        suggest_web = #{record.suggestWeb,jdbcType=BIT},
      </if>
      <if test="record.suggestMobile != null">
        suggest_mobile = #{record.suggestMobile,jdbcType=BIT},
      </if>
      <if test="record.isRoll != null">
        is_roll = #{record.isRoll,jdbcType=BIT},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_notice
    set id = #{record.id,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=CHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      show = #{record.show,jdbcType=BIT},
      sort = #{record.sort,jdbcType=TINYINT},
      suggest_web = #{record.suggestWeb,jdbcType=BIT},
      suggest_mobile = #{record.suggestMobile,jdbcType=BIT},
      is_roll = #{record.isRoll,jdbcType=BIT},
      text = #{record.text,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_notice
    set id = #{record.id,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=CHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      show = #{record.show,jdbcType=BIT},
      sort = #{record.sort,jdbcType=TINYINT},
      suggest_web = #{record.suggestWeb,jdbcType=BIT},
      suggest_mobile = #{record.suggestMobile,jdbcType=BIT},
      is_roll = #{record.isRoll,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.SysNotice">
    update sys_notice
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=CHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="show != null">
        show = #{show,jdbcType=BIT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=TINYINT},
      </if>
      <if test="suggestWeb != null">
        suggest_web = #{suggestWeb,jdbcType=BIT},
      </if>
      <if test="suggestMobile != null">
        suggest_mobile = #{suggestMobile,jdbcType=BIT},
      </if>
      <if test="isRoll != null">
        is_roll = #{isRoll,jdbcType=BIT},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.SysNotice">
    update sys_notice
    set title = #{title,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=CHAR},
      creater = #{creater,jdbcType=VARCHAR},
      show = #{show,jdbcType=BIT},
      sort = #{sort,jdbcType=TINYINT},
      suggest_web = #{suggestWeb,jdbcType=BIT},
      suggest_mobile = #{suggestMobile,jdbcType=BIT},
      is_roll = #{isRoll,jdbcType=BIT},
      text = #{text,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.SysNotice">
    update sys_notice
    set title = #{title,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=CHAR},
      creater = #{creater,jdbcType=VARCHAR},
      show = #{show,jdbcType=BIT},
      sort = #{sort,jdbcType=TINYINT},
      suggest_web = #{suggestWeb,jdbcType=BIT},
      suggest_mobile = #{suggestMobile,jdbcType=BIT},
      is_roll = #{isRoll,jdbcType=BIT}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>