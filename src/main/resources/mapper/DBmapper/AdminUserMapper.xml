<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.AdminUser">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="nickname" jdbcType="CHAR" property="nickname" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="manage_auth" jdbcType="VARCHAR" property="manageAuth" />
    <result column="login_code" jdbcType="VARCHAR" property="loginCode" />
    <result column="login_time" jdbcType="INTEGER" property="loginTime" />
    <result column="google_auth" jdbcType="INTEGER" property="googleAuth" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, nickname, password, manage_auth, login_code, login_time, google_auth, ip, name
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.AdminUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.AdminUserExample">
    delete from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.AdminUser">
    insert into admin_user (uid, nickname, password, 
      manage_auth, login_code, login_time, 
      google_auth, ip, name
      )
    values (#{uid,jdbcType=INTEGER}, #{nickname,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{manageAuth,jdbcType=VARCHAR}, #{loginCode,jdbcType=VARCHAR}, #{loginTime,jdbcType=INTEGER}, 
      #{googleAuth,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.AdminUser">
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="manageAuth != null">
        manage_auth,
      </if>
      <if test="loginCode != null">
        login_code,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="googleAuth != null">
        google_auth,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="manageAuth != null">
        #{manageAuth,jdbcType=VARCHAR},
      </if>
      <if test="loginCode != null">
        #{loginCode,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="googleAuth != null">
        #{googleAuth,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.AdminUserExample" resultType="java.lang.Long">
    select count(*) from admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_user
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=CHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.manageAuth != null">
        manage_auth = #{record.manageAuth,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCode != null">
        login_code = #{record.loginCode,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=INTEGER},
      </if>
      <if test="record.googleAuth != null">
        google_auth = #{record.googleAuth,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_user
    set uid = #{record.uid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      manage_auth = #{record.manageAuth,jdbcType=VARCHAR},
      login_code = #{record.loginCode,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=INTEGER},
      google_auth = #{record.googleAuth,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.AdminUser">
    update admin_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="manageAuth != null">
        manage_auth = #{manageAuth,jdbcType=VARCHAR},
      </if>
      <if test="loginCode != null">
        login_code = #{loginCode,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="googleAuth != null">
        google_auth = #{googleAuth,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.AdminUser">
    update admin_user
    set nickname = #{nickname,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      manage_auth = #{manageAuth,jdbcType=VARCHAR},
      login_code = #{loginCode,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=INTEGER},
      google_auth = #{googleAuth,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>