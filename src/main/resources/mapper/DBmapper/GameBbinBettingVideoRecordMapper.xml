<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.GameBbinBettingVideoRecordMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.GameBbinBettingVideoRecord">
    <id column="wagers_id" jdbcType="VARCHAR" property="wagersId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="wagers_date" jdbcType="TIMESTAMP" property="wagersDate" />
    <result column="serial_id" jdbcType="VARCHAR" property="serialId" />
    <result column="round_no" jdbcType="VARCHAR" property="roundNo" />
    <result column="game_type" jdbcType="VARCHAR" property="gameType" />
    <result column="wager_detail" jdbcType="VARCHAR" property="wagerDetail" />
    <result column="game_code" jdbcType="VARCHAR" property="gameCode" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="result_type" jdbcType="TINYINT" property="resultType" />
    <result column="card" jdbcType="VARCHAR" property="card" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="payoff" jdbcType="DECIMAL" property="payoff" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="exchangeRate" jdbcType="DOUBLE" property="exchangerate" />
    <result column="commissionable" jdbcType="DECIMAL" property="commissionable" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    wagers_id, username, wagers_date, serial_id, round_no, game_type, wager_detail, game_code, 
    result, result_type, card, bet_amount, payoff, currency, exchangeRate, commissionable, 
    origin, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_bbin_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_bbin_betting_video_record
    where wagers_id = #{wagersId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from game_bbin_betting_video_record
    where wagers_id = #{wagersId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecordExample">
    delete from game_bbin_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecord">
    insert into game_bbin_betting_video_record (wagers_id, username, wagers_date, 
      serial_id, round_no, game_type, 
      wager_detail, game_code, result, 
      result_type, card, bet_amount, 
      payoff, currency, exchangeRate, 
      commissionable, origin, created_at, 
      updated_at)
    values (#{wagersId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{wagersDate,jdbcType=TIMESTAMP}, 
      #{serialId,jdbcType=VARCHAR}, #{roundNo,jdbcType=VARCHAR}, #{gameType,jdbcType=VARCHAR}, 
      #{wagerDetail,jdbcType=VARCHAR}, #{gameCode,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{resultType,jdbcType=TINYINT}, #{card,jdbcType=VARCHAR}, #{betAmount,jdbcType=DECIMAL}, 
      #{payoff,jdbcType=DECIMAL}, #{currency,jdbcType=VARCHAR}, #{exchangerate,jdbcType=DOUBLE}, 
      #{commissionable,jdbcType=DECIMAL}, #{origin,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecord">
    insert into game_bbin_betting_video_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wagersId != null">
        wagers_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="wagersDate != null">
        wagers_date,
      </if>
      <if test="serialId != null">
        serial_id,
      </if>
      <if test="roundNo != null">
        round_no,
      </if>
      <if test="gameType != null">
        game_type,
      </if>
      <if test="wagerDetail != null">
        wager_detail,
      </if>
      <if test="gameCode != null">
        game_code,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="resultType != null">
        result_type,
      </if>
      <if test="card != null">
        card,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="payoff != null">
        payoff,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="exchangerate != null">
        exchangeRate,
      </if>
      <if test="commissionable != null">
        commissionable,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wagersId != null">
        #{wagersId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="wagersDate != null">
        #{wagersDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serialId != null">
        #{serialId,jdbcType=VARCHAR},
      </if>
      <if test="roundNo != null">
        #{roundNo,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="wagerDetail != null">
        #{wagerDetail,jdbcType=VARCHAR},
      </if>
      <if test="gameCode != null">
        #{gameCode,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="resultType != null">
        #{resultType,jdbcType=TINYINT},
      </if>
      <if test="card != null">
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="payoff != null">
        #{payoff,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangerate != null">
        #{exchangerate,jdbcType=DOUBLE},
      </if>
      <if test="commissionable != null">
        #{commissionable,jdbcType=DECIMAL},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecordExample" resultType="java.lang.Long">
    select count(*) from game_bbin_betting_video_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_bbin_betting_video_record
    <set>
      <if test="record.wagersId != null">
        wagers_id = #{record.wagersId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.wagersDate != null">
        wagers_date = #{record.wagersDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serialId != null">
        serial_id = #{record.serialId,jdbcType=VARCHAR},
      </if>
      <if test="record.roundNo != null">
        round_no = #{record.roundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.gameType != null">
        game_type = #{record.gameType,jdbcType=VARCHAR},
      </if>
      <if test="record.wagerDetail != null">
        wager_detail = #{record.wagerDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.gameCode != null">
        game_code = #{record.gameCode,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.resultType != null">
        result_type = #{record.resultType,jdbcType=TINYINT},
      </if>
      <if test="record.card != null">
        card = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.betAmount != null">
        bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payoff != null">
        payoff = #{record.payoff,jdbcType=DECIMAL},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangerate != null">
        exchangeRate = #{record.exchangerate,jdbcType=DOUBLE},
      </if>
      <if test="record.commissionable != null">
        commissionable = #{record.commissionable,jdbcType=DECIMAL},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_bbin_betting_video_record
    set wagers_id = #{record.wagersId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      wagers_date = #{record.wagersDate,jdbcType=TIMESTAMP},
      serial_id = #{record.serialId,jdbcType=VARCHAR},
      round_no = #{record.roundNo,jdbcType=VARCHAR},
      game_type = #{record.gameType,jdbcType=VARCHAR},
      wager_detail = #{record.wagerDetail,jdbcType=VARCHAR},
      game_code = #{record.gameCode,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      result_type = #{record.resultType,jdbcType=TINYINT},
      card = #{record.card,jdbcType=VARCHAR},
      bet_amount = #{record.betAmount,jdbcType=DECIMAL},
      payoff = #{record.payoff,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=VARCHAR},
      exchangeRate = #{record.exchangerate,jdbcType=DOUBLE},
      commissionable = #{record.commissionable,jdbcType=DECIMAL},
      origin = #{record.origin,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecord">
    update game_bbin_betting_video_record
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="wagersDate != null">
        wagers_date = #{wagersDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serialId != null">
        serial_id = #{serialId,jdbcType=VARCHAR},
      </if>
      <if test="roundNo != null">
        round_no = #{roundNo,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        game_type = #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="wagerDetail != null">
        wager_detail = #{wagerDetail,jdbcType=VARCHAR},
      </if>
      <if test="gameCode != null">
        game_code = #{gameCode,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="resultType != null">
        result_type = #{resultType,jdbcType=TINYINT},
      </if>
      <if test="card != null">
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="payoff != null">
        payoff = #{payoff,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangerate != null">
        exchangeRate = #{exchangerate,jdbcType=DOUBLE},
      </if>
      <if test="commissionable != null">
        commissionable = #{commissionable,jdbcType=DECIMAL},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where wagers_id = #{wagersId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.GameBbinBettingVideoRecord">
    update game_bbin_betting_video_record
    set username = #{username,jdbcType=VARCHAR},
      wagers_date = #{wagersDate,jdbcType=TIMESTAMP},
      serial_id = #{serialId,jdbcType=VARCHAR},
      round_no = #{roundNo,jdbcType=VARCHAR},
      game_type = #{gameType,jdbcType=VARCHAR},
      wager_detail = #{wagerDetail,jdbcType=VARCHAR},
      game_code = #{gameCode,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      result_type = #{resultType,jdbcType=TINYINT},
      card = #{card,jdbcType=VARCHAR},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      payoff = #{payoff,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      exchangeRate = #{exchangerate,jdbcType=DOUBLE},
      commissionable = #{commissionable,jdbcType=DECIMAL},
      origin = #{origin,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where wagers_id = #{wagersId,jdbcType=VARCHAR}
  </update>
</mapper>