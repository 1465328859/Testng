<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.UsersOnlineMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.UsersOnline">
    <id column="online_id" jdbcType="INTEGER" property="onlineId" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="time_lingt" jdbcType="INTEGER" property="timeLingt" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_url" jdbcType="VARCHAR" property="loginUrl" />
    <result column="login_from" jdbcType="TINYINT" property="loginFrom" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <sql id="Base_Column_List">
    online_id, username, login_time, time_lingt, login_ip, login_url, login_from, position
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users_online
    where online_id = #{onlineId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_online
    where online_id = #{onlineId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.UsersOnline">
    insert into users_online (online_id, username, login_time, 
      time_lingt, login_ip, login_url, 
      login_from, position)
    values (#{onlineId,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{timeLingt,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR}, #{loginUrl,jdbcType=VARCHAR}, 
      #{loginFrom,jdbcType=TINYINT}, #{position,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.UsersOnline">
    insert into users_online
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="onlineId != null">
        online_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="timeLingt != null">
        time_lingt,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginUrl != null">
        login_url,
      </if>
      <if test="loginFrom != null">
        login_from,
      </if>
      <if test="position != null">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="onlineId != null">
        #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeLingt != null">
        #{timeLingt,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginUrl != null">
        #{loginUrl,jdbcType=VARCHAR},
      </if>
      <if test="loginFrom != null">
        #{loginFrom,jdbcType=TINYINT},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.UsersOnline">
    update users_online
    <set>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeLingt != null">
        time_lingt = #{timeLingt,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginUrl != null">
        login_url = #{loginUrl,jdbcType=VARCHAR},
      </if>
      <if test="loginFrom != null">
        login_from = #{loginFrom,jdbcType=TINYINT},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where online_id = #{onlineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.UsersOnline">
    update users_online
    set username = #{username,jdbcType=CHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      time_lingt = #{timeLingt,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_url = #{loginUrl,jdbcType=VARCHAR},
      login_from = #{loginFrom,jdbcType=TINYINT},
      position = #{position,jdbcType=VARCHAR}
    where online_id = #{onlineId,jdbcType=INTEGER}
  </update>
</mapper>