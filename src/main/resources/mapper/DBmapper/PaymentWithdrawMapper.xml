<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.PaymentWithdrawMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.PaymentWithdraw">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="top_id" jdbcType="INTEGER" property="topId" />
    <result column="up_three_grade" jdbcType="VARCHAR" property="upThreeGrade" />
    <result column="take_amount" jdbcType="DECIMAL" property="takeAmount" />
    <result column="game_bet_status" jdbcType="TINYINT" property="gameBetStatus" />
    <result column="game_total_in_money" jdbcType="DECIMAL" property="gameTotalInMoney" />
    <result column="game_total_out_money" jdbcType="DECIMAL" property="gameTotalOutMoney" />
    <result column="game_total_bet_money" jdbcType="DECIMAL" property="gameTotalBetMoney" />
    <result column="last_recharge_id" jdbcType="INTEGER" property="lastRechargeId" />
    <result column="last_recharge_time" jdbcType="TIMESTAMP" property="lastRechargeTime" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_first" jdbcType="BIT" property="isFirst" />
    <result column="is_take" jdbcType="TINYINT" property="isTake" />
    <result column="take_time" jdbcType="CHAR" property="takeTime" />
    <result column="take_ip" jdbcType="VARCHAR" property="takeIp" />
    <result column="action_admin" jdbcType="CHAR" property="actionAdmin" />
    <result column="check_admin" jdbcType="CHAR" property="checkAdmin" />
    <result column="account_type" jdbcType="BIT" property="accountType" />
    <result column="check_time" jdbcType="INTEGER" property="checkTime" />
    <result column="after_amount" jdbcType="DECIMAL" property="afterAmount" />
    <result column="before_amount" jdbcType="DECIMAL" property="beforeAmount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_read" jdbcType="BIT" property="isRead" />
    <result column="ordernotes" jdbcType="VARCHAR" property="ordernotes" />
    <result column="type" jdbcType="BIT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, username, top_id, up_three_grade, take_amount, game_bet_status, game_total_in_money, 
    game_total_out_money, game_total_bet_money, last_recharge_id, last_recharge_time, 
    status, is_first, is_take, take_time, take_ip, action_admin, check_admin, account_type, 
    check_time, after_amount, before_amount, remark, is_read, ordernotes, type
  </sql>
  <select id="selectByExample" parameterType="com.Test.model.DBmodel.PaymentWithdrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_withdraw
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment_withdraw
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Test.model.DBmodel.PaymentWithdrawExample">
    delete from payment_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.PaymentWithdraw">
    insert into payment_withdraw (id, user_id, username, 
      top_id, up_three_grade, take_amount, 
      game_bet_status, game_total_in_money, game_total_out_money, 
      game_total_bet_money, last_recharge_id, last_recharge_time, 
      status, is_first, is_take, take_time, 
      take_ip, action_admin, check_admin, 
      account_type, check_time, after_amount, 
      before_amount, remark, is_read, 
      ordernotes, type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, 
      #{topId,jdbcType=INTEGER}, #{upThreeGrade,jdbcType=VARCHAR}, #{takeAmount,jdbcType=DECIMAL}, 
      #{gameBetStatus,jdbcType=TINYINT}, #{gameTotalInMoney,jdbcType=DECIMAL}, #{gameTotalOutMoney,jdbcType=DECIMAL}, 
      #{gameTotalBetMoney,jdbcType=DECIMAL}, #{lastRechargeId,jdbcType=INTEGER}, #{lastRechargeTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{isFirst,jdbcType=BIT}, #{isTake,jdbcType=TINYINT}, #{takeTime,jdbcType=CHAR}, 
      #{takeIp,jdbcType=VARCHAR}, #{actionAdmin,jdbcType=CHAR}, #{checkAdmin,jdbcType=CHAR}, 
      #{accountType,jdbcType=BIT}, #{checkTime,jdbcType=INTEGER}, #{afterAmount,jdbcType=DECIMAL}, 
      #{beforeAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{isRead,jdbcType=BIT}, 
      #{ordernotes,jdbcType=VARCHAR}, #{type,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.PaymentWithdraw">
    insert into payment_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="upThreeGrade != null">
        up_three_grade,
      </if>
      <if test="takeAmount != null">
        take_amount,
      </if>
      <if test="gameBetStatus != null">
        game_bet_status,
      </if>
      <if test="gameTotalInMoney != null">
        game_total_in_money,
      </if>
      <if test="gameTotalOutMoney != null">
        game_total_out_money,
      </if>
      <if test="gameTotalBetMoney != null">
        game_total_bet_money,
      </if>
      <if test="lastRechargeId != null">
        last_recharge_id,
      </if>
      <if test="lastRechargeTime != null">
        last_recharge_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isFirst != null">
        is_first,
      </if>
      <if test="isTake != null">
        is_take,
      </if>
      <if test="takeTime != null">
        take_time,
      </if>
      <if test="takeIp != null">
        take_ip,
      </if>
      <if test="actionAdmin != null">
        action_admin,
      </if>
      <if test="checkAdmin != null">
        check_admin,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="afterAmount != null">
        after_amount,
      </if>
      <if test="beforeAmount != null">
        before_amount,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="ordernotes != null">
        ordernotes,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=INTEGER},
      </if>
      <if test="upThreeGrade != null">
        #{upThreeGrade,jdbcType=VARCHAR},
      </if>
      <if test="takeAmount != null">
        #{takeAmount,jdbcType=DECIMAL},
      </if>
      <if test="gameBetStatus != null">
        #{gameBetStatus,jdbcType=TINYINT},
      </if>
      <if test="gameTotalInMoney != null">
        #{gameTotalInMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameTotalOutMoney != null">
        #{gameTotalOutMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameTotalBetMoney != null">
        #{gameTotalBetMoney,jdbcType=DECIMAL},
      </if>
      <if test="lastRechargeId != null">
        #{lastRechargeId,jdbcType=INTEGER},
      </if>
      <if test="lastRechargeTime != null">
        #{lastRechargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isFirst != null">
        #{isFirst,jdbcType=BIT},
      </if>
      <if test="isTake != null">
        #{isTake,jdbcType=TINYINT},
      </if>
      <if test="takeTime != null">
        #{takeTime,jdbcType=CHAR},
      </if>
      <if test="takeIp != null">
        #{takeIp,jdbcType=VARCHAR},
      </if>
      <if test="actionAdmin != null">
        #{actionAdmin,jdbcType=CHAR},
      </if>
      <if test="checkAdmin != null">
        #{checkAdmin,jdbcType=CHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=INTEGER},
      </if>
      <if test="afterAmount != null">
        #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="beforeAmount != null">
        #{beforeAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=BIT},
      </if>
      <if test="ordernotes != null">
        #{ordernotes,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Test.model.DBmodel.PaymentWithdrawExample" resultType="java.lang.Long">
    select count(*) from payment_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_withdraw
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.topId != null">
        top_id = #{record.topId,jdbcType=INTEGER},
      </if>
      <if test="record.upThreeGrade != null">
        up_three_grade = #{record.upThreeGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.takeAmount != null">
        take_amount = #{record.takeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.gameBetStatus != null">
        game_bet_status = #{record.gameBetStatus,jdbcType=TINYINT},
      </if>
      <if test="record.gameTotalInMoney != null">
        game_total_in_money = #{record.gameTotalInMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.gameTotalOutMoney != null">
        game_total_out_money = #{record.gameTotalOutMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.gameTotalBetMoney != null">
        game_total_bet_money = #{record.gameTotalBetMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.lastRechargeId != null">
        last_recharge_id = #{record.lastRechargeId,jdbcType=INTEGER},
      </if>
      <if test="record.lastRechargeTime != null">
        last_recharge_time = #{record.lastRechargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.isFirst != null">
        is_first = #{record.isFirst,jdbcType=BIT},
      </if>
      <if test="record.isTake != null">
        is_take = #{record.isTake,jdbcType=TINYINT},
      </if>
      <if test="record.takeTime != null">
        take_time = #{record.takeTime,jdbcType=CHAR},
      </if>
      <if test="record.takeIp != null">
        take_ip = #{record.takeIp,jdbcType=VARCHAR},
      </if>
      <if test="record.actionAdmin != null">
        action_admin = #{record.actionAdmin,jdbcType=CHAR},
      </if>
      <if test="record.checkAdmin != null">
        check_admin = #{record.checkAdmin,jdbcType=CHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=BIT},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=INTEGER},
      </if>
      <if test="record.afterAmount != null">
        after_amount = #{record.afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.beforeAmount != null">
        before_amount = #{record.beforeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isRead != null">
        is_read = #{record.isRead,jdbcType=BIT},
      </if>
      <if test="record.ordernotes != null">
        ordernotes = #{record.ordernotes,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_withdraw
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=CHAR},
      top_id = #{record.topId,jdbcType=INTEGER},
      up_three_grade = #{record.upThreeGrade,jdbcType=VARCHAR},
      take_amount = #{record.takeAmount,jdbcType=DECIMAL},
      game_bet_status = #{record.gameBetStatus,jdbcType=TINYINT},
      game_total_in_money = #{record.gameTotalInMoney,jdbcType=DECIMAL},
      game_total_out_money = #{record.gameTotalOutMoney,jdbcType=DECIMAL},
      game_total_bet_money = #{record.gameTotalBetMoney,jdbcType=DECIMAL},
      last_recharge_id = #{record.lastRechargeId,jdbcType=INTEGER},
      last_recharge_time = #{record.lastRechargeTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      is_first = #{record.isFirst,jdbcType=BIT},
      is_take = #{record.isTake,jdbcType=TINYINT},
      take_time = #{record.takeTime,jdbcType=CHAR},
      take_ip = #{record.takeIp,jdbcType=VARCHAR},
      action_admin = #{record.actionAdmin,jdbcType=CHAR},
      check_admin = #{record.checkAdmin,jdbcType=CHAR},
      account_type = #{record.accountType,jdbcType=BIT},
      check_time = #{record.checkTime,jdbcType=INTEGER},
      after_amount = #{record.afterAmount,jdbcType=DECIMAL},
      before_amount = #{record.beforeAmount,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_read = #{record.isRead,jdbcType=BIT},
      ordernotes = #{record.ordernotes,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.PaymentWithdraw">
    update payment_withdraw
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="topId != null">
        top_id = #{topId,jdbcType=INTEGER},
      </if>
      <if test="upThreeGrade != null">
        up_three_grade = #{upThreeGrade,jdbcType=VARCHAR},
      </if>
      <if test="takeAmount != null">
        take_amount = #{takeAmount,jdbcType=DECIMAL},
      </if>
      <if test="gameBetStatus != null">
        game_bet_status = #{gameBetStatus,jdbcType=TINYINT},
      </if>
      <if test="gameTotalInMoney != null">
        game_total_in_money = #{gameTotalInMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameTotalOutMoney != null">
        game_total_out_money = #{gameTotalOutMoney,jdbcType=DECIMAL},
      </if>
      <if test="gameTotalBetMoney != null">
        game_total_bet_money = #{gameTotalBetMoney,jdbcType=DECIMAL},
      </if>
      <if test="lastRechargeId != null">
        last_recharge_id = #{lastRechargeId,jdbcType=INTEGER},
      </if>
      <if test="lastRechargeTime != null">
        last_recharge_time = #{lastRechargeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isFirst != null">
        is_first = #{isFirst,jdbcType=BIT},
      </if>
      <if test="isTake != null">
        is_take = #{isTake,jdbcType=TINYINT},
      </if>
      <if test="takeTime != null">
        take_time = #{takeTime,jdbcType=CHAR},
      </if>
      <if test="takeIp != null">
        take_ip = #{takeIp,jdbcType=VARCHAR},
      </if>
      <if test="actionAdmin != null">
        action_admin = #{actionAdmin,jdbcType=CHAR},
      </if>
      <if test="checkAdmin != null">
        check_admin = #{checkAdmin,jdbcType=CHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=INTEGER},
      </if>
      <if test="afterAmount != null">
        after_amount = #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="beforeAmount != null">
        before_amount = #{beforeAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="ordernotes != null">
        ordernotes = #{ordernotes,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.PaymentWithdraw">
    update payment_withdraw
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=CHAR},
      top_id = #{topId,jdbcType=INTEGER},
      up_three_grade = #{upThreeGrade,jdbcType=VARCHAR},
      take_amount = #{takeAmount,jdbcType=DECIMAL},
      game_bet_status = #{gameBetStatus,jdbcType=TINYINT},
      game_total_in_money = #{gameTotalInMoney,jdbcType=DECIMAL},
      game_total_out_money = #{gameTotalOutMoney,jdbcType=DECIMAL},
      game_total_bet_money = #{gameTotalBetMoney,jdbcType=DECIMAL},
      last_recharge_id = #{lastRechargeId,jdbcType=INTEGER},
      last_recharge_time = #{lastRechargeTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      is_first = #{isFirst,jdbcType=BIT},
      is_take = #{isTake,jdbcType=TINYINT},
      take_time = #{takeTime,jdbcType=CHAR},
      take_ip = #{takeIp,jdbcType=VARCHAR},
      action_admin = #{actionAdmin,jdbcType=CHAR},
      check_admin = #{checkAdmin,jdbcType=CHAR},
      account_type = #{accountType,jdbcType=BIT},
      check_time = #{checkTime,jdbcType=INTEGER},
      after_amount = #{afterAmount,jdbcType=DECIMAL},
      before_amount = #{beforeAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=BIT},
      ordernotes = #{ordernotes,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>