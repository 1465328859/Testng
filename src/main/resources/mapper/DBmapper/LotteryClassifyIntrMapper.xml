<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Test.model.DBmodel.LotteryClassifyIntrMapper">
  <resultMap id="BaseResultMap" type="com.Test.model.DBmodel.LotteryClassifyIntr">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="kind_id" jdbcType="INTEGER" property="kindId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Test.model.DBmodel.LotteryClassifyIntr">
    <result column="desc" jdbcType="LONGVARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, kind_id, sort
  </sql>
  <sql id="Blob_Column_List">
    desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lottery_classify_intr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lottery_classify_intr
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Test.model.DBmodel.LotteryClassifyIntr">
    insert into lottery_classify_intr (id, kind_id, sort, 
      desc)
    values (#{id,jdbcType=INTEGER}, #{kindId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Test.model.DBmodel.LotteryClassifyIntr">
    insert into lottery_classify_intr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="kindId != null">
        kind_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="desc != null">
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kindId != null">
        #{kindId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Test.model.DBmodel.LotteryClassifyIntr">
    update lottery_classify_intr
    <set>
      <if test="kindId != null">
        kind_id = #{kindId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Test.model.DBmodel.LotteryClassifyIntr">
    update lottery_classify_intr
    set kind_id = #{kindId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      desc = #{desc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Test.model.DBmodel.LotteryClassifyIntr">
    update lottery_classify_intr
    set kind_id = #{kindId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>